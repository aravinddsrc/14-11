@model  IEnumerable<DSRCManagementSystem.Models.ManageAssessment>
@{
    ViewBag.Title = "My Assessment";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
    
}
@section AddToHead
{
    <script src="../../Content/Template/js/raphael-min.js" type="text/javascript"></script>
    <script src="../../Content/Template/js/morris.min.js" type="text/javascript"></script>
    <link href="../../Content/Template/js/select2/select2-bootstrap.css" rel="stylesheet"
        type="text/css" />
    <link href="../../Content/Template/js/select2/select2.css" rel="stylesheet" type="text/css" />
    <link href="../../Content/Template/css/font-icons/font-awesome/css/font-awesome.min.css"
        rel="stylesheet" type="text/css" />
    <link href="../../Content/Plugins/bootstrap-datetimepicker/css/bootstrap-datepicker.css"
        rel="stylesheet" type="text/css" />
    <script src="../../Content/Plugins/bootstrap-datetimepicker/js/bootstrap-datepicker.js"
        type="text/javascript"></script>
    <script src="../../Content/bootstrap/js/bootstrap.min.js" type="text/javascript"></script>
    <script src="../../Content/bootstrap/bootbox.min.js" type="text/javascript"></script>
    <script src="../../Content/bootstrap/js/bootstrap.min.js" type="text/javascript"></script>
    @*    <link href="../../Content/horizontal%20barchart/css/horizBarChart.css" rel="stylesheet"
        type="text/css" />
    <script src="../../Content/horizontal%20barchart/js/jquery.horizBarChart.min.js"
        type="text/javascript"></script>*@
     <style>
      .dropdown-menu {
    background-color: white;
}   
        </style> 
}
@{
    int SNO = 1;
    
}


 <p>
        <a href="@Url.Action("ManageAssessment","ManageAssessment")"style="color:black ">
           Assessment Management
        </a>
          &#160;<img src="~/Images/righ-arrow.png" />&#160;
        <b>My Assessment</b>
    </p>
<br />

    <div class="col-md-12">
        <div class="panel panel-default panel-shadow" data-collapsed="0">
            <!-- panel head -->
            <div class="panel-heading">
                <div class="panel-title" color="White">
                    My Assessment
                </div>
            </div>
            <!-- panel body -->
            <div class="panel-body" style="overflow: auto">
                <div class="form-group">
                    <div class="panel-body">
                        @using (Html.BeginForm("AssessmentEntry", "ManageAssessment", FormMethod.Get, new { @id = "form" }))
                        {
                            if (ViewBag.UID != null)
                            {
                            @Html.Hidden("UIDS", (string)@ViewBag.UIDS, new { @id = "UID" })
                            }
                            <div class="form-group">



                                <br />
                                <table class="table table-bordered datatable" id="tblRoles">
                                    <thead>
                                        <tr>
                                            <th style="text-align: center;">S.No
                                            </th>
                                           @* <th style="text-align: center;">@Html.DisplayName("Employee Name")
                                            </th>*@
                                            <th style="text-align: center;">@Html.DisplayName("Assessment Name")
                                            </th>
                                            <th style="text-align: center;">@Html.DisplayName("Assessment Date")
                                            </th>
                                            <th style="text-align: center;">@Html.DisplayName("Attendance")
                                            </th>
                                            <th style="text-align: center;">@Html.DisplayName("Pass Score/Total Score")
                                            </th>
                                            <th style="text-align: center; width: 100px">@Html.DisplayName("Score")
                                            </th>
                                            <th style="text-align: center;">@Html.DisplayName("Status")
                                            </th>
                                        </tr>
                                    </thead>
                                    @if (Model != null)
                                    {
                                        int j = 0;
                                        foreach (var item in Model)
                                        {
                                        <tr>
                                            <td style="text-align: center;">
                                                @(SNO++)
                                            </td>
                                           @* <td>
                                                
                                                @Html.DisplayFor(modelitem => item.UserName)
                                            

                                                <span id="span_UserName" style="color: Red;"></span>
                                            </td>*@
                                          
                                            <td >
                                                @Html.HiddenFor(modelitem => item.AssessmentID, new { @id = "AssessmentID" })
                                                @Html.DisplayFor(modelitem => item.AssessmentName)
                                            </td>
                                            <td style="text-align: center;">@item.AssessmentDate.ToString("ddd, MMM d, yyyy")</td>
                                            <td>@Html.HiddenFor(modelitem => item.TotalScore, new { @id = "TotalScoreID" + j })
                                                @Html.HiddenFor(modelitem => item.PassingScore, new { @id = "PassingScoreID" + j })
                                                @*@Html.DisplayFor(modelitem => item.UserAssessmentID)*@
                                                @Html.HiddenFor(modelitem => item.UserAssessmentID, new { @id = "UserAssessmentID" + j })
                                                               
                                                    @if(item.Attendance == 1)
                                                    {                                                                                                               
                                                <center>   @Html.TextBoxFor(model=> item.Attendance, "Attended" ,
                                                    new
                                                    {
                                                        @id = "Attendance" + j,
                                                        @class = "form-control",
                                                        @style = "Width:160Px",
                                                        @onchange = string.Format("Activity(this.value, {0})", j),
                                                        disabled = "disabled"
                                                    })</center>
                                                    }
                                                 @if(item.Attendance == 2)
                                                    {                                                                                                               
                                                <center>   @Html.TextBoxFor(model=> item.Attendance, "Not Attended" ,
                                                    new
                                                    {
                                                        @id = "Attendance" + j,
                                                        @class = "form-control",
                                                        @style = "Width:160Px",
                                                        @onchange = string.Format("Activity(this.value, {0})", j),
                                                        disabled = "disabled"
                                                    })</center>
                                                    }
                                                 @if(item.Attendance == 3)
                                                    {                                                                                                               
                                                <center>   @Html.TextBoxFor(model=> item.Attendance, "Pending" ,
                                                    new
                                                    {
                                                        @id = "Attendance" + j,
                                                        @class = "form-control",
                                                        @style = "Width:160Px",
                                                        @onchange = string.Format("Activity(this.value, {0})", j),
                                                        disabled = "disabled"
                                                    })</center>
                                                    }

                                                
                                             <span id="span_Attendance@(j)" style="color: Red;"></span>
                                            </td>
                                            <td>
                                                <center>
                                                <div id="donut-example@(j)" style="width:120px; height:120px;text-align: center">
                                                    </div> </center>

                                                @*<h3 style="font-size: 15px;">@Html.DisplayFor(modelitem => item.PassingScore)/@Html.DisplayFor(modelitem => item.TotalScore)</h3>*@

                                            </td>
                                            <td>
                                                <center>    @Html.TextBoxFor(modelitem => item.Score, new { @id = "TotalScore" + j, @name = "TotalScore", @class = "form-control", @style = "Width:100Px;Height:42px", @type = "number", @onchange = string.Format("Activity(this.value, {0})", j), disabled = "disabled" })</center>
                                                <span id="span_Score@(j)" style="color: Red;"></span>
                                            </td>
                                            <td style="text-align: center" id="myfirstchart">
                                                @* <center>
                                                  <div class="chart-horiz clearfix" style="width: 100%;" id="times"@(j)>
                                                    <ul class="chart">
                                                        <li class="current" style="margin-top: 20px;">

                                                            <span class="bar" style="background-color: #ff6666; height: 20px;" data-number="10">
                                                                <span id="span_Status@(j)" style="color: white;"></span>
                                                            </span>
                                                        </li>
                                                    </ul>
                                                </div></center>*@

                                                <span id="span_StatusG@(j)" style="color: green;"></span>
                                                <span id="span_StatusR@(j)" style="color: red;"></span>
                                                <span id="span_StatusN@(j)" style="color: blue;"></span>
                                                <span id="span_StatusS@(j)" style="color: black;"></span>






                                            </td>

                                        </tr>
                                            j++;
                                        }
                                    }
                                </table>
                            </div>
                        }
                    </div>
                </div>
                @* <div class="col-md-12" style="text-align: right">
                    <button type="reset" id="btnAdd" class="btn btn-default" onclick="@("window.location.href='" + @Url.Action("AssessmentEntry", "ManageAssessment") + "'")    ;">
                        Reset
                    </button>
                    <button type="button" id="btnAdd" class="btn btn-info" onclick="Save(@Model.Count())">
                        Save
                    </button>
                </div>*@
            </div>
            @*<button class="btn btn-Default" style="float: right; padding-right:10px;margin-top:25px;"   onclick="@("window.location.href='" + @Url.Action("Observation", "ManageObservation") + "'")    ;">
                Back
            </button>*@
        </div>
    </div>


<div class="modal fade in" id="portlet-config" tabindex="-1" role="dialog" aria-labelledby="myModalLabel"
    aria-hidden="true">
    <div class="modal-dialog">
        <div class="tools">
            <div id="PartialSection">
            </div>
        </div>
    </div>
</div>

@section scripts
{
    <script src="../../Content/Template/js/jquery.dataTables.min.js" type="text/javascript"></script>
    <script src="../../Content/Template/js/dataTables.bootstrap.js" type="text/javascript"></script>
    <script src="../../Content/Template/js/select2/select2.min.js" type="text/javascript"></script>
    <script src="../../Content/JS/ToasterAlert.js" type="text/javascript"></script>
    <script type="text/javascript">
        $(function() {
            $(".modal-body select")
                .select2({
                    minimumResultsForSearch: -1
                });
            $("#sp").select2();
            $("#roles").select2();
            $("#Idbranchname").select2();
            $("#Iddepartment").select2();
            $("#Idgroup").select2();


            //$(document).ready(function () {


            //    $("#tblRoles").dataTable({
            //        "sPaginationType": "bootstrap",
            //        "aLengthMenu": [[10, 15, 20, 25, -1], [10, 15, 20, 25, "All"]],
            //        //"columnDefs": [{ bSortable: false, 'aTargets': [6] }, { bSortable: false, 'aTargets': [7] }]

            //    });
            //    $(".dataTables_wrapper select").select2({
            //        minimumResultsForSearch: -1
            //    });
            //    $('thead>tr>th').css('text-align', 'center');

            //});

        });

        function Clear() {

            window.location.href = '@Url.Action("AssessmentEntry", "ManageAssessment")';

        }

        function Save(t) {

            var data = @Html.Raw(Json.Encode(ViewData["ASSID"]));


            for (var j = 0; j < t; j++) {
                if (document.getElementById('Attendance' + j).value == "") {
                    document.getElementById('span_Attendance' + j).innerHTML = "Select Attendance";
                    return;
                } else {
                    document.getElementById('span_Attendance' + j).innerHTML = "";
                }
                if (document.getElementById('TotalScore' + j).value == "") {
                    document.getElementById('span_Score' + j).innerHTML = "Enter Score";
                    return;
                } else {
                    document.getElementById('span_Score' + j).innerHTML = "";
                }
                var v = parseInt($("#TotalScore" + j).val());
                var T = $("#TotalScoreID" + j).val();
                if (v > T) {
                    document
                        .getElementById('span_Score' + j)
                        .innerHTML = "Score Must be Less that Total Score-" + data;
                    return;
                } else {
                    document.getElementById('span_Score' + j).innerHTML = "";
                }


            }


            var value = 0;
            $('#portlet-config1').appendTo("body").modal({ backdrop: 'static', keyboard: false });
            var listOfObjects = [];
            var list = [];
            for (var k = 0; k < t; k++) {
                value = $("#Attendance" + k).val();
                listOfObjects.push(value);
            }
            //if (value == '') {
            //    document.getElementById("value").innerHTML = "Enter ";
            //}
            var str = listOfObjects.toString();
            var str_array = str.split(',');

            for (var i = 0; i < str_array.length; i++) {

                str_array[i] = str_array[i].replace(/^\s*/, "").replace(/\s*$/, "");

                list.push(str_array[i].split(','))
            }
            ////////////////////////////////////
            var value1 = 0;
            var listOfObjects1 = [];
            var list1 = [];
            for (var k = 0; k < t; k++) {
                value1 = $("#TotalScore" + k).val();
                listOfObjects1.push(value1);
            }
            //for (var m = 0; m < t; m++) {
            //    if ($("#TotalScore" + m).val() > data) {
            //        document.getElementById('span_Score' + m).innerHTML = "Score Must be Lesser that Total Score-" + data;
            //        return;
            //    } else {
            //        document.getElementById('span_Score' + m).innerHTML = "";
            //    }
            //}
            var str1 = listOfObjects1.toString();
            var str_array1 = str1.split(',');

            for (var i = 0; i < str_array1.length; i++) {

                str_array1[i] = str_array1[i].replace(/^\s*/, "").replace(/\s*$/, "");

                list1.push(str_array1[i].split(','))
            }


            ////////////////////////////////////
            var value2 = 0;
            var listOfObjects2 = [];
            var list2 = [];
            for (var k = 0; k < t; k++) {
                value2 = $("#UserAssessmentID" + k).val();
                listOfObjects2.push(value2);
            }
            //if (value2 == '') {
            //    document.getElementById("value2").innerHTML = "";
            //}
            var str2 = listOfObjects2.toString();
            var str_array2 = str2.split(',');

            for (var i = 0; i < str_array2.length; i++) {

                str_array2[i] = str_array2[i].replace(/^\s*/, "").replace(/\s*$/, "");

                list2.push(str_array2[i].split(','))
            }

            var values =
            {
                "Column": list.toString(),
                "Column1": list1.toString(),
                "Column2": list2.toString(),
                //"UID": $("#UID").val(),

            }
            var opts =
            {
                "closeButton": true,
                "debug": false,
                "positionClass": "toast-top-right",
                "toastClass": "White",
                "onclick": null,
                "showDuration": "300",
                "hideDuration": "1000",
                "timeOut": "2000",
                "extendedTimeOut": "1000",
                "showEasing": "swing",
                "hideEasing": "linear",
                "showMethod": "fadeIn",
                "hideMethod": "fadeOut"
            }

            $.ajax({
                url: "../../ManageAssessment/AssessmentEntry/",
                type: 'POST',
                cache: false,
                data: values,
                traditional: true,
                global: false,
                success: function(result) {
                    if (result == "Success") {
                        toastr.success(" Assessment Updated successfully", opts);
                        setTimeout(function() { location.reload(); }, 1000);

                    }
                    if (result == "Warning") {
                        $("#portlet-config").modal("hide");
                        toastr.warning(" Assessment Date Already Exist ", opts);

                    }

                }
            });
        }


        $(document)
            .ready(function() {

                var Pass = @Html.Raw(Json.Encode(ViewData["Pass"]));

                var x = @Model.Count();


                for (var n = 0; n < x; n++) {
                    var t = parseInt($("#TotalScore" + n).val());
                    var p = parseInt($("#PassingScoreID" + n).val());
                    var A = $("#Attendance" + n).val();

                    if(A == "Attended")
                    {

                        if (t >= p) {

                            document.getElementById('span_StatusG' + n).innerHTML = "Pass";
                            return;


                        }
                        if (t < p) {

                            document.getElementById('span_StatusR' + n).innerHTML = "Fail";
                            return;

                        }
                        if (isNaN(t)) {

                            document.getElementById('span_StatusN' + n).innerHTML = "No Score";
                            return;

                        }
                    }
                    else
                    {
                        document.getElementById('span_StatusN' + n).innerHTML = "No Score";
                        return;

                    }
                }


                $(".datetimepicker")
                    .datepicker({
                        format: 'dd-mm-yyyy',
                        //startDate: '1d',
                        todayHighlight: true,
                        autoclose: true,
                        //endDate: '1d'

                    });

                var x = @Model.Count();
                var data = @Html.Raw(Json.Encode(ViewData["ID"]));
                for (var j = 0; j < x; j++) {

                   // $("#Attendance" + j).prop('selectedIndex', data[j]);
                   // $("#Attendance" + j).select2();

                }

                //var selectedId = $('#AssessmentID').val();
                //if (selectedId == 0) {

                //    $('#tblRoles').hide();
                //} else {
                //    $('#tblRoles').show();
                //}

                //$('.chart')
                //    .horizBarChart({
                //        selector: '.bar',
                //        speed: 1000
                //    });


            });

        function change(ID) {

            $("#form").submit();
            $('#tblRoles').show();
        }


        function Activity(id, start) {

            var Pass = @Html.Raw(Json.Encode(ViewData["Pass"]));
            var x = @Model.Count();
            var ID = parseInt(id);
            var PASS = parseInt(Pass);


            var P = parseInt($("#TotalScore" + start).val());
            var U = parseInt($("#UserAssessmentID" + start).val());
            var A = $("#Attendance" + start).val();
            var T = parseInt($("#TotalScoreID" + start).val());
            var PA = parseInt($("#PassingScoreID" + start).val());
            if(A == "Attended")
            {
            
                if (P > T) {
                    document
                        .getElementById('span_Score' + start)
                        .innerHTML = "Score Must be Less than Total Score-" + T;
                    return;
                }
                if (P <= T) {
                    document.getElementById('span_Score' + start).innerHTML = "";

                }


                if (P >= PA && !(P > T)) {

                    document.getElementById('span_StatusG' + start).innerHTML = "Pass";
                    document.getElementById('span_StatusN' + start).innerHTML = "";


                }
                if (P < PA || P > T) {

                    document.getElementById('span_StatusG' + start).innerHTML = "";


                }
                if (P < PA && !(P > T)) {

                    document.getElementById('span_StatusR' + start).innerHTML = "Fail";
                    document.getElementById('span_StatusN' + start).innerHTML = "";


                }
                if (P > PA || P > T) {

                    document.getElementById('span_StatusR' + start).innerHTML = "";


                }
            
          


                if (isNaN(P)) {

                    document.getElementById('span_StatusN' + start).innerHTML = "No Score";
                    return;

                }
            }

            else
            {
                document.getElementById('span_StatusN' + start).innerHTML = "No Score";
                return;

            }
         

            var url2 = '@Url.Action("AssessmentEntryTO")';

            $.get(url2,
                { TotalScore: P, UserAssessmentID: U, Attendance: A },
                function(data) {
                    //$('#TotalScore'+start).empty().load(window.location.href + '#TotalScore'+start);
                    document.getElementById('span_StatusS' + start).innerHTML = "Saved";
                    $("#span_StatusS" + start).show().delay(1000).fadeOut();
                  
                    return;
                });


        }

        function GetDepartments() {

            var Bid = $("#Idbranchname").find("option:selected").prop("value");

            if (Bid !== "") {

                var url2 = '@Url.Action("GetDepartments", "Users")';

                    $.get(url2,
                        { BranchId: Bid },
                        function(data) {

                            var items = [];
                            items.push("");
                            items.push("<option value=0>--Select--</option>");

                            $.each(data,
                                function() {
                                    items.push("<option value=" + this.Value + ">" + this.Text + "</option>");
                                });
                            $("#Iddepartment").html(items.join(' '));
                            ////$("#Iddepartment").select2();
                        });
                }
            }

            function GetGroups() {

                var Did = $("#Iddepartment").find("option:selected").prop("value");

                if (Did !== "") {

                    var url2 = '@Url.Action("GetGroups", "Users")';

                    $.get(url2,
                        { DepartmentId: Did },
                        function(data) {

                            var items = [];
                            items.push("");
                            items.push("<option value=0>---Select---</option>");

                            $.each(data,
                                function() {
                                    items.push("<option value=" + this.Value + ">" + this.Text + "</option>");
                                });
                            $("#Idgroup").html(items.join(' '));
                            //$("#Idgroup").select2();
                        });
                }
            }


            var s1 = @Model.Count();


        for (var i = 0; i < s1; i++) {
            var data = @Html.Raw(Json.Encode(ViewData["ID"]));


           // $("#Attendance" + i).prop('selectedIndex', data[i]);
           // $("#Attendance" + i).select2();

            var data = [];
            var P = parseInt($("#PassingScoreID" + i).val());
            var T = parseInt($("#TotalScoreID" + i).val());
            var t = parseInt($("#TotalScore" + i).val());
            var A = $("#Attendance" + i).val();

            if(A == "Attended")
            {

                if (t >= P) {

                    document.getElementById('span_StatusG' + i).innerHTML = "Pass";


                }
                if (t < P) {

                    document.getElementById('span_StatusR' + i).innerHTML = "Fail";


                }
                if (isNaN(t)) {

                    document.getElementById('span_StatusN' + i).innerHTML = "No Score";


                }
            }

            else
            {
                document.getElementById('span_StatusN' + i).innerHTML = "No Score";
            }
          


            var TotalScore = { label: "Total Score", value: T };
            var PassingScore = { label: "Pass Score", value: P };

            data.push(TotalScore);
            data.push(PassingScore);

            var output = "donut-example" + i;


            Morris.Donut({
                element: output,
                data: data,
            });

        }

        $(document)
            .ready(function() {
                $("#tblRoles")
                    .dataTable({
                        "sPaginationType": "bootstrap",
                        "aLengthMenu": [[10, 15, 20, 25, -1], [10, 15, 20, 25, "All"]],
                        "aaSorting": [],
                        //"columnDefs": [{ bSortable: false, 'aTargets': [6] }, { bSortable: false, 'aTargets': [7] }]
                    });
                $(".dataTables_wrapper select")
                    .select2({
                        minimumResultsForSearch: -1
                    });
                $('thead>tr>th').css('text-align', 'center');

            });

    </script>
}


