@model IEnumerable<DSRCManagementSystem.Models.ManageAssessment>
@{
    ViewBag.Title = "Manage Assessment";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
    
}
@section AddToHead
{
    <script src="../../Content/Template/js/raphael-min.js" type="text/javascript"></script>
    <script src="../../Content/Template/js/morris.min.js" type="text/javascript"></script>
    <link href="../../Content/Template/js/select2/select2-bootstrap.css" rel="stylesheet"
        type="text/css" />
    <link href="../../Content/Template/js/select2/select2.css" rel="stylesheet" type="text/css" />
    <link href="../../Content/Template/css/font-icons/font-awesome/css/font-awesome.min.css"
        rel="stylesheet" type="text/css" />
    <link href="../../Content/Plugins/bootstrap-datetimepicker/css/bootstrap-datepicker.css"
        rel="stylesheet" type="text/css" />
    <script src="../../Content/Plugins/bootstrap-datetimepicker/js/bootstrap-datepicker.js"
        type="text/javascript"></script>
    <script src="../../Content/bootstrap/js/bootstrap.min.js" type="text/javascript"></script>
    <script src="../../Content/bootstrap/bootbox.min.js" type="text/javascript"></script>
    <script src="../../Content/bootstrap/js/bootstrap.min.js" type="text/javascript"></script>
     <style>
      .dropdown-menu {
    background-color: white;
}   
        </style> 
}
@{
    int SNO = 1;
    DSRCManagementSystem.DSRCManagementSystemEntities1 db = new DSRCManagementSystem.DSRCManagementSystemEntities1();
    var branchcnt = db.Master_Branches.ToList().Count;
    var branchId = db.Master_Branches.ToList();
}
<style>
    th {
        text-align:center;
    }
    td {
        text-align:center;
    }
</style>
@*<ol class="breadcrumb bc-3">
    <li><a href="@Url.Action("ManageAssessment","ManageAssessment")">Assessment Management</a></li>
    <li class="active"><strong>Manage Assessment</strong> </li>
</ol>*@
    <p>
        <a href="@Url.Action("ManageAssessment","ManageAssessment")"style="color:black ">
            Assessment Management
        </a>
          &#160;<img src="~/Images/righ-arrow.png" />&#160;
        <b>Manage Assessment</b>
    </p>
<div class="row" >

    <div class="col-md-12">
        <div class="panel panel-default panel-shadow" data-collapsed="0">
            <!-- panel head -->
            <div class="panel-heading">
                <div class="panel-title" color="White">
                   Manage Assessment
                </div>
            </div>
            <!-- panel body -->
             
            <div class="panel-body" style="overflow: auto">
                @using (Html.BeginForm("ManageAssessment", "ManageAssessment", FormMethod.Post, new { @id = "form" }))
                { 
                   
                    <div class="form-group">
                        <div class="row">
                         <div class="col-md-2" style="float: right;margin-top:-30px; padding-top: 37px;" id="btnAdd2">
                                <button type="button" class="btn btn-blue" style="float: right; font-weight: bold;" onclick='AddAssessment()'>
                                    Add Assessment</button>
                            </div>
                    </div>
                        <div class="row">
                            @if (branchcnt==1)
                        
                        {
                            <div class="visible-md">
                                @Html.Label("Branch",(string)ViewBag.Lbl_branch, new { @class = "control-label" })
                                @Html.DropDownList("Idbranchname1", ViewBag.BranchList as SelectList,"",new { @id = "Idbranchname1", @name = "BranchName", @class = "form-control", @onchange = "GetDepartments()" })
                            </div>
                            }else{
                                 <div class="col-md-3" style=" padding-top: 7px; margin-left: 15px;width: 280px;">
                                @Html.Label("Branch",(string)ViewBag.Lbl_branch, new { @class = "control-label" })
                                @Html.DropDownList("Idbranchname1", ViewBag.BranchList as SelectList,"",new { @id = "Idbranchname1", @name = "BranchName", @class = "form-control", @onchange = "GetDepartments()" })
                            </div>
                            }
                            <div class="col-md-1" style="width: 280px; padding-top: 7px;">
                                @Html.Label("Department", (string)ViewBag.Lbl_department, new { @class = "control-label" })
                                @Html.DropDownList("Iddepartment1", ViewBag.DepartmentIdList as SelectList,"--Select--",  new { @id = "Iddepartment1", @name = "DepartmentId", @class = "form-control", @onchange = "GetGroups()" })
                            </div>
                            <div class="col-md-1" style="width: 280px; padding-top: 7px;">
                                @Html.Label("Department Group",(string)ViewBag.Lbl_depgroup , new { @class = "control-label" })
                                @Html.DropDownList("Idgroup1", ViewBag.Groups as SelectList,"--Select--", new { @id = "Idgroup1", @name = "GroupName", @class = "form-control", @onchange = "GetCustomer()" })
                            </div>
                            
                           
                        </div>
                        <br />
                        <div class="row">
                            <div class="col-md-4" style="margin-top:5px;float:right;margin-right:-130px;">
                                <button id="btn_Submit" type="submit" name="btn_Submit" class="btn btn-info btn-icon">
                                    Search<i class="entypo-search"></i>
                                </button>

                                 <button type="button" id="btnAdd" class="btn btn-default" onclick="Cancel()">
                            Reset
                        </button>
                            </div>
                        </div>
                        <br />
                       @* <div style="overflow: auto">*@
                        <table class="table table-bordered datatable" id="tblRoles">
                            <thead>
                                <tr>
                                    <th style="text-align: center;">S.No
                                    </th>
                                    <th style="text-align: center;">@Html.DisplayName("Assessment Name")
                                    </th>
                                    <th style="text-align: center;">@Html.DisplayName("Assessment Description")
                                    </th>
                                    <th style="text-align: center;">@Html.DisplayName("Assessment Date")
                                    </th>
                                    <th style="text-align: center;">@Html.DisplayName("Total Score")
                                    </th>
                                    <th style="text-align: center;">@Html.DisplayName("Passing Score")
                                    </th>
                                    <th style="text-align: center;">@Html.DisplayName("Edit")
                                    </th>
                                    <th style="text-align: center;">@Html.DisplayName("Delete")
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model != null)
                                {
                                    foreach (var item in Model)
                                    {
                                    <tr>
                                        <td style="text-align: center;">
                                            @(SNO++)
                                        </td>
                                        <td style="text-align: left;">
                                            @Html.HiddenFor(modelitem => item.AssessmentID)
                                            @Html.DisplayFor(modelitem => item.AssessmentName)
                                        </td>
                                        <td style="text-align: left;">
                                            @Html.DisplayFor(modelitem => item.AssessmentDescription)
                                        </td>
                                        <td style="text-align: center;">
                                           @item.AssessmentDate.ToString("ddd, MMM d, yyyy")
                                        </td>
                                        <td style="text-align: center;">
                                            @Html.DisplayFor(modelitem => item.TotalScore)
                                        </td>
                                        <td style="text-align: center;">
                                            @Html.DisplayFor(modelitem => item.PassingScore)
                                        </td>
                                        <td style="text-align: center;">
                                            <a href="#" data-toggle="tooltip" title="Edit">
                                                <button type="button" class="btn btn-info" onclick='Edit(@item.AssessmentID,"@item.AssessmentName"
                                                   ,"@item.AssessmentDescription.Replace("\n","-").Replace("\"","-")",
                                                   "@item.AssessmentDate",
                                                   @item.TotalScore,@item.PassingScore)'>
                                                    <i class="entypo-pencil"></i>
                                                </button>
                                            </a>
                                        </td>
                                        <td style="text-align: center;">
                                            <a href="#" data-toggle="tooltip" title="Delete">
                                                <button type="button" class="btn btn-red" onclick='Delete(@item.AssessmentID)'>
                                                    <i class="entypo-cancel"></i>
                                                </button>
                                            </a>
                                        </td>
                                    </tr>
                                    }
                                }
                            </tbody>
                        </table>
                          @*  </div>*@
                    </div>
                }
            </div>
        </div>
    </div>
</div>
<div class="modal fade in" id="portlet-config" tabindex="-1" role="dialog" aria-labelledby="myModalLabel"
    aria-hidden="true">
    <div class="modal-dialog">
        <div class="tools">
            <div id="PartialSection">
            </div>
        </div>
    </div>
</div>
@section scripts
{
    <script src="../../Content/Template/js/jquery.dataTables.min.js" type="text/javascript"></script>
    <script src="../../Content/Template/js/dataTables.bootstrap.js" type="text/javascript"></script>
    <script src="../../Content/Template/js/select2/select2.min.js" type="text/javascript"></script>
    <script src="../../Content/JS/ToasterAlert.js" type="text/javascript"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            $(".datetimepicker").datepicker({
                format: 'yyyy-mm-dd',
                todayHighlight: true,
                autoclose: true,
            });
           
            

        });
        $(document).ready(function () {
            $("#tblRoles").dataTable({
                "sPaginationType": "bootstrap",
                "aLengthMenu": [[10, 15, 20, 25, -1], [10, 15, 20, 25, "All"]],
                "aaSorting": [],
                "columnDefs": [{ bSortable: false, 'aTargets': [6] }, { bSortable: false, 'aTargets': [7] }]
            });
            $(".dataTables_wrapper select").select2({
                minimumResultsForSearch: -1
            });
            $('thead>tr>th').css('text-align', 'center');

        });
        function AddAssessment() {
            var url = '@Url.Action("AddAssessment", "ManageAssessment")';
            window.location.href = url;
        }

        function AddAssessment() {
            $.ajax({
                url: "../../ManageAssessment/AddAssessment/",
                type: 'GET',
                cache: false,
                success: function (result) {
                    if (result == "DeleteWarning") {

                        $("#portlet-config").modal('hide');
                        toastr.warning("Cannot Delete", opts);
                        setTimeout(function () { location.reload(); }, 1000);
                    }
                    else {
                        $('#PartialSection').html(result);
                        $('#portlet-config').appendTo("body").modal({ backdrop: 'static', keyboard: false });
                    }
                }
            });
        }

        function Delete(uid) {
            var opts =
           {
               "closeButton": true,
               "debug": false,
               "positionClass": "toast-top-right",
               "toastClass": "White",
               "onclick": null,
               "showDuration": "3000",
               "hideDuration": "1000",
               "timeOut": "2000",
               "extendedTimeOut": "1000",
               "showEasing": "swing",
               "hideEasing": "linear",
               "showMethod": "fadeIn",
               "hideMethod": "fadeOut"
           }
            bootbox.confirm("Are you sure want to delete ?", function (result) {
                if (result) {
                    $.ajax({
                        url: "../../ManageAssessment/Delete/",
                        type: 'GET',
                        cache: false,
                        data: { ID: uid },
                        success:
                           function (result) {
                               if (result == "Success") {

                                   $('#portlet-config').appendTo("body").modal({ backdrop: 'static', keyboard: false });
                                   toastr.success(" Assessment Deleted successfully", opts);
                                   setTimeout(function () { location.reload(); }, 1000);
                               }
                               else if (result == "Warning") {
                                   $('#portlet-config').appendTo("body").modal({ backdrop: 'static', keyboard: false });
                                   toastr.warning("Cannot Delete", opts);
                                   setTimeout(function () {
                                       window.location = window.location;

                                   }, 1500);
                               }
                               else if (result == "Warning1") {
                                   $('#portlet-config').appendTo("body").modal({ backdrop: 'static', keyboard: false });
                                   toastr.warning("Cannot Delete ", opts);
                                   setTimeout(function () {
                                       window.location = window.location;
                                   }, 1500);
                               }
                           }
                    });
                }
            });
        }



        function Save() {
            var values =
                        {
                            "ActivityDate": $("#ActivityDate").val(),
                        }
            var opts =
                   {
                       "closeButton": true,
                       "debug": false,
                       "positionClass": "toast-top-right",
                       "toastClass": "White",
                       "onclick": null,
                       "showDuration": "300",
                       "hideDuration": "1000",
                       "timeOut": "2000",
                       "extendedTimeOut": "1000",
                       "showEasing": "swing",
                       "hideEasing": "linear",
                       "showMethod": "fadeIn",
                       "hideMethod": "fadeOut"
                   }

            $.ajax({

                url: "../../ManageObservation/observation/",
                type: 'GET',
                cache: false,
                data: values,
                traditional: true,
                global: false,
                success: function (result) {
                    if (result == "Success") {
                        toastr.success("Activity Added successfully", opts);
                        setTimeout(function () { location.reload(); }, 1000);

                    }
                    if (result == "Warning") {
                        $("#portlet-config").modal("hide");
                        toastr.warning(" Date Already Exist ", opts);

                    }

                }
            });
        }
        function change() {
            $('#GroupName').hide();
            
            var DepartmentName = "";
            value = $("#DepartmentName").val();
            if (value == "") {
                DepartmentName = 0;
            }
            else {

                DepartmentName = $('#DepartmentName').find("option:selected").prop("value");
            }
            var url2 = '@Url.Action("GetAvailEmployees")';
            $.get(url2, { DepartmentName: DepartmentName }, function (data) {
                var items = [];
                items.push("");
                items.push("<option value=0>--Select--</option>");

                $.each(data, function () {
                    items.push("<option value=" + this.Value + ">" + this.Text + "</option>");

                });
                $("#GroupName").html(items.join(' '));
                $("#GroupName").select2();
            });
        }


        $(document).ready(function () {
            fnUserchange();
            $("#DepartmentName").change(function () { fnUserchange() });
        });

        function fnUserchange() {
            var selectedId = $('#DepartmentName').val();
            if (selectedId == 0) {
                $('#Group').hide();
            }
            else {
                $('#Group').show();
            }
        }

       function GetDepartments() {
            var Bid = $("#Idbranchname1").find("option:selected").prop("value");
            if (Bid !== "") {
                var url2 = '@Url.Action("GetDepartments")';
                $.get(url2, { BranchId: Bid }, function (data) {
                    var items = [];
                    items.push("");
                    items.push("<option value=0>--Select--</option>");

                    $.each(data, function () {
                        items.push("<option value=" + this.Value + ">" + this.Text + "</option>");
                    });
                    $("#Iddepartment1").html(items.join(' '));
                    $("#Iddepartment1").select2();
                });
                var url4 = '@Url.Action("GetGroups")';

                $.get(url4,
                    { DepartmentId: 0 },
                    function (data) {
                        var items = [];
                        items.push("");
                        items.push("<option value=0>--Select--</option>");

                        $.each(data,
                            function () {
                                items.push("<option value=" + this.Value + ">" + this.Text + "</option>");
                            });
                        $("#Idgroup1").html(items.join(' '));
                        $("#Idgroup1").select2();
                    });
            }
        }
        function GetGroups() {
           

            var Did = $("#Iddepartment1").find("option:selected").prop("value");

            if (Did == "") {
                Did = 0;
            }

            if (Did !== "") {

                var url2 = '@Url.Action("GetGroups")';

                $.get(url2, { DepartmentId: Did }, function (data) {

                    var items = [];
                    items.push("");
                    items.push("<option value=0>---Select---</option>");

                    $.each(data, function () {
                        items.push("<option value=" + this.Value + ">" + this.Text + "</option>");
                    });
                    $("#Idgroup1").html(items.join(' '));
                    $("#Idgroup1").select2();
                });
            }
        }
        $(function () {
            $(".modal-body select").select2({
                minimumResultsForSearch: -1
            });
            $("#Idbranchname1").select2();
            $("#Iddepartment1").select2();
            $("#Idgroup1").select2();
        });

        
        function Edit(uId, pName, pName1, pName2,uId1,uId2) {
            $.ajax({
                url: "../../ManageAssessment/EditAssessment/",
                type: 'GET',
                cache: false,
                data: { UID: uId, Name: pName, Desc: pName1, Date: pName2, Total: uId1, Pass: uId2},
                success: function (result) {
                    if (result == "DeleteWarning") {

                        $("#portlet-config").modal('hide');
                        toastr.warning("Cannot Delete", opts);
                        setTimeout(function () { location.reload(); }, 1000);
                    }
                    else {
                        $('#PartialSection').html(result);
                        $('#portlet-config').appendTo("body").modal({ backdrop: 'static', keyboard: false });
                    }
                }
            });
        }
        function Cancel() {
            var url = '@Url.Action("ManageAssessment", "ManageAssessment")';
            window.location.href = url;
        }

    </script>
}
