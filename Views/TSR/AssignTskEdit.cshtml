@model DSRCManagementSystem.Models.AssignTaskModel
@{
  
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Timesheet</title>

    <link href="../../Content/Template/js/jquery-ui/css/no-theme/jquery-ui-1.10.3.custom.min.css"
        rel="stylesheet" type="text/css" />
    <link href="../../Content/Template/css/font-icons/entypo/css/entypo.css" rel="stylesheet"
        type="text/css" />
    <link href="../../Content/Template/css/font-icons/entypo/css/animation.css" rel="stylesheet"
        type="text/css" />
         <script src="../../Content/Plugins/bootstrap-datetimepicker/js/moment.js" type="text/javascript"></script>
    <link rel="stylesheet" href="http://fonts.googleapis.com/css?family=Noto+Sans:400,700,400italic"
        id="style-resource-4" />
         <script src="../../Content/Template/js/select2/select2.min.js" type="text/javascript"></script>
    <link href="../../Content/Template/css/neon.css" rel="stylesheet" type="text/css" />
    <link href="../../Content/Template/css/custom.css" rel="stylesheet" type="text/css" />
    <script src="../../Content/Plugins/bootstrap-datetimepicker/js/en-gb.js" type="text/javascript"></script>
    <script src="../../Content/Plugins/bootstrap-datetimepicker/js/moment.js" type="text/javascript"></script>
    <script src="../../Content/Plugins/bootstrap-datetimepicker/js/bootstrap-datepicker.js"
        type="text/javascript"></script>
    <link href="../../Content/Plugins/bootstrap-datetimepicker/css/bootstrap-datepicker.css"
        rel="stylesheet" type="text/css" />
<link href="../../Content/Template/js/select2/select2-bootstrap.css" rel="stylesheet"
    type="text/css" />
<link href="../../Content/Template/js/select2/select2.css" rel="stylesheet" type="text/css" />
<script src="../../Content/Template/js/select2/select2.min.js" type="text/javascript"></script>


    <style>
       .dropdown-menu {
    background-color: white;
          }  
        </style>

</head>
<body>
    <div class="modal-content">
        <div class="modal-header" style="background-color: #f0f0f1;">
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                ×</button>
            <h4 class="modal-title">
             Edit Assign Task</h4>
        </div>
 
     <div class="modal-body">

            @using (Html.BeginForm("AssignTaskEdit", "TSR", FormMethod.Post))
            {
                <div class="row">
                    <div class="col-md-12" style="text-align: right">
                        @Html.Label("*", new { @style = "color:#FF0000" }) Required field(s)
                        @Html.HiddenFor(model => model.assigntaskid, new { @id = "ID" })
                          
                    </div>
                </div>
                
                 <div class="row" >

                   <div class="col-md-6">
                   <div class="form-group">
                @Html.Label("Project Name", new { @class = "control-label" })
                @Html.Label("*", new { @style = "color:#FF0000" })
                @Html.DropDownList("ProjectId", ViewBag.ProjectList as SelectList, "--Select--", new { @id = "ProjectId", @class = "select2-container select2-container-multi select2 visible", @disabled = "disabled" })
                <span id="span_ID6" style="color: Red;"></span> 
                   </div>
                </div> 
             
                
              
              <div class="col-md-6">  
                     <div class="form-group">
                        @Html.Label("Phase Name", new { @class = "control-label" })
                      @Html.Label("*", new { @style = "color:#FF0000" })
              
                     @Html.DropDownList("PhaseId", ViewBag.PhaseList as SelectList, "--Select--", new { @id = "PhaseId", @class = "form-control", @disabled = "disabled" })

                   
                     <span id="span_ID7" style="color: Red;"></span>
                      </div>
                      </div>
                    
           </div>
                 
                   <div class="row">
                 
                     <div class="col-md-6">  
                      <div class="form-group">
                      @Html.Label("Task Name ", new { @class = "control-label" })    
                      @Html.Label("*", new { @style = "color:#FF0000" })              
                    
                       @Html.DropDownList("Taskid", ViewBag.tasklist as SelectList, "--Select--", new { @class = "form-control", @id = "Taskid", @disabled = "disabled" })         
                       
                       <span id="span_ID11" style="color: Red;"></span>
                      </div>
                  
                      </div>
                       <div class="col-md-6">  
                    
                      <div class="form-group">
                    
                      @Html.Label("Task Status", new { @class = "control-label" })    
                      @Html.Label("*", new { @style = "color:#FF0000" })              
                        @Html.DropDownList("tasktypeid", ViewBag.taskstatuslist as SelectList, "--Select--", new { @id = "tasktypeid", @class = "form-control", @disabled = "disabled" })
                     <span id="span_ID0" style="color: Red;"></span>
                    
                      </div>

                      </div>
                      </div>
                   <div class="row">
                     <div class="col-md-6">  
                     <div class="form-group">
                      @Html.Label(" No Of Efforts", new { @class = "control-label" })    
                      @Html.Label("*", new { @style = "color:#FF0000" })              
                      @Html.TextBoxFor(x => x.NumberOfEfforts, new { @name = "Efforts", @id = "Efforts", @class = "form-control", @maxlength = 3, @style = "Height:42Px" }) 
                     <span id="span_ID10" style="color: Red;"></span>
                      </div>
                      </div>

                        <div class="col-md-6">  
                     <div class="form-group">
                      @Html.Label("Start Date", new { @class = "control-label" })    
                      @Html.Label("*", new { @style = "color:#FF0000" })              
                      @Html.TextBoxFor(x => x.Start, new { @name = "StartDate", @id = "StartDate", @class = "form-control datetimepicker", @style = "Height:42Px", @maxlength = 50 }) 
                     <span id="span_ID8" style="color: Red;"></span>
                      </div>
                      </div>
                    
                 </div>
                 <div class="row">

                   <div class="col-md-6">  
                     <div class="form-group">
                      @Html.Label("End Date", new { @class = "control-label" })    
                      @Html.Label("*", new { @style = "color:#FF0000" })              
                      @Html.TextBoxFor(x => x.End, new { @name = "EndDate", @id = "EndDate", @class = "form-control datetimepicker", @style = "Height:42Px", @maxlength = 50 }) 
                     <span id="span_ID9" style="color: Red;"></span> 
                      </div>
                      </div>
                   
                    <div class="col-md-6">  
                     <div class="form-group">
                      @Html.Label("Employees", new { @class = "control-label" })    
                      @Html.Label("*", new { @style = "color:#FF0000" })
                     @Html.DropDownList("Id1", ViewBag.Email1 as MultiSelectList, new {@id="CC", @class = "select2-container select2-container-multi select2 visible", @multiple = "multiple" })
                     <span id="Emp" style="color: Red;"></span>
                     <span id="span_ID14" style="color: Red;"></span>
                      </div>
                      </div>




                     
                      </div>
                              
                
               
              
            }   

             </div>  
             
             
             
                    
              
           
             <div class="modal-footer">
            <button type="button" class="btn btn-default" data-dismiss="modal">
                Cancel
            </button>
            <button type="button" id="btnAdd" class="btn btn-info"  onclick='Assignsave()' >
                Save
            </button>
        </div>
      </div>
                
    <div class="modal fade in" id="portlet-config" tabindex="-1" role="dialog" aria-labelledby="myModalLabel"
        aria-hidden="true">
        <div class="modal-dialog">
            <div class="tools">
                <div id="PartialSection">
                    <div id="LoaderContent" style="height: 100%;">
                        <img src="../../Content/Template/images/finalloader.GIF" style="margin-left: 43%;
                            margin-top: 40%;" />
                    </div>
                </div>
            </div>
        </div>
    </div>             

    
 
            <script src="../../Content/Template/js/select2/select2.min.js" type="text/javascript"></script>   
             <script src="../../Content/JS/ToasterAlert.js" type="text/javascript"></script>
     
       



          <script type="text/javascript">

              var submitform = true;

              $('#EndDate').change(function () {
                     
                  var startDate = $("#StartDate").val();

                  var splitedStartDate = startDate.split("-");
                  var endDate = $("#EndDate").val();

                  var splitedEndDate = endDate.split("-");

                  var startDateTime = new Date(splitedStartDate[2], splitedStartDate[1] - 1, splitedStartDate[0]);

                  var endDateTime = new Date(splitedEndDate[2], splitedEndDate[1] - 1, splitedEndDate[0]);

                  if (startDateTime > endDateTime) {
                      submitform = false;
                      $("#span_ID9").html("End Date should be greater than the Start Date");
                  }

                  else {
                      submitform = true;
                      $("#span_ID9").html('');
                  }
              });








              $(function () {
                  $(".modal-body select").select2({
                      minimumResultsForSearch: -1
                  });
              });

              $(".datetimepicker").datepicker({
                  format: 'dd-mm-yyyy',
                  // startDate: '+1d',
                  daysOfWeekDisabled: [0, 6],
                  autoclose: true
              });


//              $('#EndDate').change(function () {
//                var startDate = $("#StartDate").val();

//                  var splitedStartDate = startDate.split("-");
//                  var endDate = $("#EndDate").val();

//                  var splitedEndDate = endDate.split("-");

//                  var startDateTime = new Date(splitedStartDate[2], splitedStartDate[1] - 1, splitedStartDate[0]);

//                  var endDateTime = new Date(splitedEndDate[2], splitedEndDate[1] - 1, splitedEndDate[0]);

//                  if (startDate > endDate) {
//                      alert("------");
//                      $("#span_ID9").html("End Date should be greater than the Start Date");
//                      submitform = false;
//                  }

//                  else {

//                      $("#span_ID9").html('');
//                      submitform = true;
//                  }
//              });



//              $("#EndDate").change(function () {
//                 
//                  var startDate = $("#StartDate").val();
//                  var splitedStartDate = startDate.split("/");
//                  var endDate = $("#EndDate").val();
//                  var splitedEndDate = endDate.split("/");
//                  var startDateTime = new Date(splitedStartDate[2], splitedStartDate[1] - 1, splitedStartDate[0]);
//                  var endDateTime = new Date(splitedEndDate[2], splitedEndDate[1] - 1, splitedEndDate[0]);

//                  
//                      if (startDateTime > endDateTime) {
//                          $("#span_ID14").html("End Date should be greater than the Start Date");
//                          errorsCount==1;

//                      } 
//                      else 
//                      {

//                          errorsCount = 0;
//                      }

//                  

//                  if (errorsCount === 0) {

//                      $("#span9").html("");
//                  }
//              });


                            $(document).ready(function () {

                                $("#Efforts").on('paste keypress', (function (e) {
                                    var key;
                                    if (e.which) {
                                        key = String.fromCharCode(e.which);
                                    } else {
                                        key = e.originalEvent.clipboardData.getData('Text');
                                    }
                                    var value = $(this).val() + key;
                                    if (!/^[0-9]{1,999}$/.test(value)) {
                                        e.preventDefault();
                                    }
                                }));


                            });

                         



                            $(document).ready(function () {
                                $('#StartDate').keypress(function (e) {
                                    var regex = new RegExp("^[0-9\\-\\/]+$");
                                    var str = String.fromCharCode(!e.charCode ? e.which : e.charCode);
                                    if (regex.test(str)) {

                                        return true;
                                    }

                                    $("#StartDate").html("Enter Valid Start Date").show();
                                    return false;
                                });
                            });

                            $(document).ready(function () {
                                $('#EndDate').keypress(function (e) {
                                    var regex = new RegExp("^[0-9\\-\\/]+$");
                                    var str = String.fromCharCode(!e.charCode ? e.which : e.charCode);
                                    if (regex.test(str)) {

                                        return true;
                                    }

                                    $("#EndDate").html("Enter Valid End Date").show();
                                    return false;
                                });
                            });

                         





        function Assignsave() {

            if (submitform == true) {

                if (document.getElementById('Efforts').value == '' || document.getElementById('StartDate').value == '' || document.getElementById('EndDate').value == '') {


                    if (document.getElementById('Efforts').value == '') {
                        document.getElementById("span_ID10").innerHTML = " Enter no of efforts";
                    }
                    else {
                        document.getElementById("span_ID10").innerHTML = "";
                    }
                    if (document.getElementById('StartDate').value == '') {
                        document.getElementById("span_ID8").innerHTML = " Select start date ";
                    }
                    else {
                        document.getElementById("span_ID8").innerHTML = "";

                    }

                    if (document.getElementById('EndDate').value == '') {
                        document.getElementById("span_ID9").innerHTML = " Select end date ";
                    }
                    else {
                        document.getElementById("span_ID9").innerHTML = "";

                    }
                }
                else if ($("#Efforts").val() > 999) {
                    document.getElementById('span_ID10').innerHTML = "Enter 3 digit integer only";
                }



                else if ($("#Efforts").val() == 0 || $("#Efforts").val() == 00 || $("#Efforts").val() == 000) {

                    document.getElementById('span_ID10').innerHTML = "No of efforts should be greater than 0";
                }




                else {

                    //                          var startDate = $("#StartDate").val();

                    //                          var splitedStartDate = startDate.split("-");
                    //                          var endDate = $("#EndDate").val();

                    //                          var splitedEndDate = endDate.split("-");

                    //                          var startDateTime = new Date(splitedStartDate[2], splitedStartDate[1] - 1, splitedStartDate[0]);

                    //                          var endDateTime = new Date(splitedEndDate[2], splitedEndDate[1] - 1, splitedEndDate[0]);



                    //                          if (startDateTime > endDateTime) {

                    //                              $("#span_ID14").html("End Date should be greater than the Start Date");
                    //                          }


                    //                          else {
                    $("#span_ID14").html(" ");

                    var values =

                           {

                               "assigntaskid": $("#ID").val(),
                               "ProjectId": $("#ProjectId").val(),
                               "ProjectphaseId": $("#PhaseId").val(),
                               "Taskid": $("#Taskid").val(),
                               "tasktypeid": $("#tasktypeid").val(),
                               "NumberOfEfforts": $("#Efforts").val(),
                               "StartDate": $("#StartDate").val(),
                               "EndDate": $("#EndDate").val(),
                               "userid": $("#CC").val(),
                               "multiselectemployees": $("#CC").val().toString(),
                               "SelectedEmpList": $("#CC").val()

                           }


                    var opts =
                                     {
                                         "closeButton": true,
                                         "debug": false,
                                         "positionClass": "toast-top-right",
                                         "toastClass": "White",
                                         "onclick": null,
                                         "showDuration": "300",
                                         "hideDuration": "1000",
                                         "timeOut": "2000",
                                         "extendedTimeOut": "1000",
                                         "showEasing": "swing",
                                         "hideEasing": "linear",
                                         "showMethod": "fadeIn",
                                         "hideMethod": "fadeOut"
                                     }

                    //  $('#portlet-config1').appendTo("body").modal({ backdrop: 'static', keyboard: false });

                    $.ajax({

                        url: "../../TSR/AssignTskEdit/",
                        type: 'POST',
                        cache: false,
                        data: values,
                        traditional: true,
                        global: false,
                        success: function (result) {

                            if (result == "Success") {

                                $('#portlet-config').appendTo("body").modal({ backdrop: 'static', keyboard: false });
                                toastr.success(" Assign Task updated successfully", opts);
                                setTimeout(function () { location.reload(); }, 1000);

                            }

                            if (result.message == "timeexceed") {


                                toastr.warning(" Task should be assign within task range from " + result.sdate + " to " + result.edate, opts);

                            }
                            if (result.message == "Already") {


                                toastr.warning(result.name + " is already assigned to the task on these dates ", opts);

                            }
                            if (result === "Greater") {
                                toastr.warning("No. of Efforts in Assign Task should not exceeds No. of efforts in Task");

                            }
                        }

                    });








                }

            }
                   }

                            

         
          </script>
                
       </body>
             </html>
