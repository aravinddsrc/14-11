@model DSRCManagementSystem.Models.TeamEntryData
@{
    ViewBag.Title = "Team Time Entry";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<link href="../../Content/themes/base/minified/jquery.ui.datepicker.min.css" rel="stylesheet"
    type="text/css" />
<script src="../../Content/Template/js/jquery.multi-select.js" type="text/javascript"></script>
<script src="../../Content/Template/js/bootstrap-datepicker.js" type="text/javascript"></script>
<script src="../../Content/Template/js/raphael-min.js" type="text/javascript"></script>
<script src="../../Content/Template/js/morris.min.js" type="text/javascript"></script>
<link href="../../Content/horizontal%20barchart/css/horizBarChart.css" rel="stylesheet"
type="text/css" />
<script src="../../Content/horizontal%20barchart/js/jquery.horizBarChart.min.js"
    type="text/javascript"></script>
<script type="text/javascript">
    $(document).ready(function () {
        $('.chart').horizBarChart({
            selector: '.bar',
            speed: 1000
        });
        $('input[type=radio][name=IsSorting]').change(function () {
            sub();
        });

    });
</script>
<style>
 #MemberId
    {
        min-width: 200px;
        width: 25%;
    }
 .dropdown-menu {
    background-color: white;
}        
</style>
<ol class="breadcrumb bc-3">
    <li><a>Team Time Entry</a> </li>
    <li class="active"><strong>Employees Time Entry</strong> </li>
</ol>
<div class="row">
    <div class="col-md-12" style="text-align: right">
        @Html.Label("*", new { @style = "color:#FF0000" }) Required field(s)
    </div>
</div>
@using (Html.BeginForm("NonTechTeamTimeEntry", "ViewMembersEntry", FormMethod.Post, new { @class = "form-horizontal form-groups-bordered", @id = "form" }))
{  
    <script type="text/javascript">

     
function PageReady() {
       

       
            @{
    bool Isnull = Model.EmployeeData == null;
   bool IsTeamData = Model.IsTeamData;
}
           var IsNull ='@Isnull'=='False'?false:true;
         var IsTeamData = '@IsTeamData'=='False'?false:true;
           if(!IsNull)
           {
             var JsonLeaveData = @Html.Raw(Json.Encode(Model.EmployeeData));
            var xKey=IsTeamData? 'empName':'Date';
             var yKeys=['hoursWorked'];
             var Labels=['Date','Day','In Time','Out Time'];
                         
               if ($('#chart3').length > 0) {

                Morris.Bar({
                element: 'chart3',
                axes: true,
                data: JsonLeaveData,
             
                hideHover:'true',
                resize: true,
                xkey:xKey ,
                ykeys:yKeys ,
                labels:Labels ,
                vertical: true,
                hideHover: true,
                hoverCallback: function(index, options, content) {
            this.xlabelAngle = 50;
            $(".morris-hover").html("<div>" + "<p style='color:Green;'> Hours worked: " + options.data[index].hoursWorked + "</p>" + "<p style='color:Blue;'> Date: " + options.data[index].Date + "</p>" + "<p style='color:Grey;'>"+ options.labels[1] + ": " + options.data[index].Day + "</p>" + "<p style='color:brown;'>" + options.labels[2] + ": " + options.data[index].InTime + "</p>" + "<p style='color:Navy;'>" + options.labels[3] + ": " + options.data[index].OutTime + "</p>" + "</div>");
            },
         barColors: function (row, series, type) {
         var valWorked = row.y;

          if(JsonLeaveData[row.x]["Day"]=="Sunday"||JsonLeaveData[row.x]["Day"]=="Saturday")
          return "gray";

            if(valWorked==undefined)
            return "green";
        if(valWorked >=8) 
            return "green";
        if(valWorked >=7) 
            return "orange";

        if(valWorked<7) 
            return "red";

                }
            });
            }
        }

    
            var startDateTime = $('#Date1').val();
            var endDateTime = $('#Date2').val();
            var startDate = startDateTime.substring(0, 2);
            var startMonth = startDateTime.substring(3, 5);
            var startYear = startDateTime.substring(6, 10);
            var endDate = endDateTime.substring(0, 2);
            var endMonth = endDateTime.substring(3, 5);
            var endYear = endDateTime.substring(6, 10);

            var startDateParsed = new Date(startYear, startMonth - 1, startDate);
            var endDateParsed = new Date(endYear, endMonth - 1, endDate);
          
            if (startDateParsed > endDateParsed) {
                if (endDateTime == "") {
                    var Message = "Please select the End Date";                    
                    document.getElementById("StartDateTime_ID").innerHTML = "";                    
                }
                else {
                    if ($('#MemberId').val() === "0") {
                        document.getElementById("Startdate_Valid").innerHTML = "";
                    }
                    else {
                        document.getElementById("enddate_Valid").innerHTML = "To date must greater than the from date";
                        $("#time").hide();
                       $("#chart3").hide();
                    }
                }
            }
            else {
                document.getElementById("StartDateTime_ID").innerHTML = "";
            }
            var dateTo = $('.datepickerTo').datepicker(
        {
           format: 'dd/mm/yyyy',
       
            autoclose: true

        }
        ).on('changeDate', function (e) {

        });

            var dateFrom = $('.datepickerFrom').datepicker(
        {
            format: 'dd/mm/yyyy',
          
            endDate:new Date(),
            autoclose: true
        }
        ).on('changeDate', function (e) {
            dateTo.datepicker('setStartDate', e.date);
            var parts = dateTo[0].value.split("/");
            var toDate = new Date(parts[2], parts[1] - 1, parts[0]);
            if (toDate < e.date)
                $('#dateTo').val($('#dateFrom').val());
            var toDate = new Date(dateTo[0].value);
        });



            $('#dateFrom').change(function () {
               
                $('#dateTo').attr('data-end-date', $(this).val());
            });

            $('#MemberId').change(function () {
           
              var selectedId = $(this).val();
              if(selectedId==0)
              {
              $("#Type1").prop('disabled', false);
            $("#Type2").prop('disabled', false);
            
              }
              else
              {
               $("#Type1").prop('disabled', true);
        $("#Type2").prop('disabled', true);
              }

           $("#Startdate_Valid").text('');
              $("#StartDateTime_ID").text('');
           });
         }

        $(PageReady);
        
        function sub() {
    
        var dateFrom = $('.datepickerFrom').val();
        var dateTo = $('.datepickerTo').val();
        var dateFromParts = dateFrom.split("/");
        var fromDate = new Date(dateFromParts[2], dateFromParts[1] - 1, dateFromParts[0]);
        var dateToParts = dateTo.split("/");
        var toDate = new Date(dateToParts[2], dateToParts[1] - 1, dateToParts[0]);
        var labelText = $("#lblValidFrom").text();
        if (dateFrom != "" && dateTo != "") {
        if(fromDate <= toDate) {
            $("#form").submit();
            }
            else{
            $("#StartDateTime_ID").text('To date must be greater than the From date');
            $("#time").hide();
            $("#chart3").hide();
            $("#work").hide();
             $("#chart").hide();
            }
        }
        else if (dateFrom == "" && dateTo == "") {
            $("#Startdate_Valid").text('Select' + ' ' + labelText.slice(0, -1));
            $("#StartDateTime_ID").text('Select To Date');
        }
        else if (dateTo == "") {
            $("#StartDateTime_ID").text('Select To Date');
            $("#Startdate_Valid").text('');
        }
        else {
            $("#Startdate_Valid").text('Select' + ' ' + labelText.slice(0, -1));
            $("#StartDateTime_ID").text('');
        }
    }
    </script>

    
    @*<div class="form-group">*@
    <div class="row">
     <div class="col-md-3">
        <label>
            Users @Html.Label("  *", new { @style = "color:red;font-weight:bold;" })</label>
          
            @Html.DropDownListFor(m => m.MemberId, Model.MemberList.Select(f => new SelectListItem
       {
           Text = f.MemberName, 
           Value = f.MemberId,
       }), new { @class = "form-control", @id = "MemberId" })
       </div>
       
         <div class="col-md-2">
        <label id="lblValidFrom">
            From Date @Html.Label("  *", new { @style = "color:red;font-weight:bold;" })</label>     
             @Html.TextBoxFor(m => m.DateFrom, "{0:dd/MM/yyyy}", new {@id="Date1", @class = "form-control datepickerFrom", @data_start_date = "d", @data_format = "dd-mm-yyyy" })
            <span id="Startdate_Valid" style="color: Red;"></span>
        </div>

        <div class="col-md-2" >
        <label id="lblValidTo">
            To Date @Html.Label("  *", new { @style = "color:red;font-weight:bold;" })</label>
        
            @Html.TextBoxFor(m => m.DateTo, "{0:dd/MM/yyyy}", new {@id="Date2", @class = "form-control datepickerTo", @data_start_date = "d", @data_format = "dd-mm-yyyy" })
            <span id="StartDateTime_ID" style="color: Red;"></span>
        </div>
       
       <div class="col-md-1">
       <label>
       (Or)
       </label>
       </div>

       <div class="col-md-2" >
        <label >
            Months @Html.Label("*", new { @style = "color:red;font-weight:bold;" })</label>
        
            @Html.DropDownList("ListMonth", (IList<SelectListItem>)ViewBag.Month1, "Select Month", new { @id = "ListMonth", @name = "ListMonth", @class = "form-control" })
             <span id="span_ID14" style="color: Red;"></span>
        </div>

        <div class="col-md-2" style="padding-top:25px">
            <button id="btnSubmit" type="button" class="btn btn-success center-block" style="float: left;" onclick="sub()">Show</button>
         </div>

       </div>
      @*  </div>*@

@section scripts
{
<script src="../../Content/Template/js/select2/select2.min.js" type="text/javascript"></script>
<script src="../../Content/Template/js/jquery.dataTables.min.js" type="text/javascript"></script>
    <script src="../../Content/Template/js/dataTables.bootstrap.js" type="text/javascript"></script>
    <script src="../../Content/Template/js/select2/select2.min.js" type="text/javascript"></script>

      <script type="text/javascript">

      
          $(".dataTables_wrapper select").select2({
              minimumResultsForSearch: -1
          });



       </Script>
   }
    
  
      
 

    if (Model.EmployeeData != null && Model.IsTeamData && Model.EmployeeData.Count > 0)
    {
        string Date = Model.EmployeeData[0].Date.ToString(System.Globalization.CultureInfo.InvariantCulture);
    <div class="chart-horiz clearfix">
        <!-- Actual bar chart -->
        <ul class="chart" id="chart">
            <li class="title" title='Team Entry @Date'></li>
            @foreach (var Employee in Model.EmployeeData)
            {
                string Bgcolor = Employee.hoursWorked >= 8 ? "green" : Employee.hoursWorked >= 7 ? "orange" : "red";
                <li class="current" style="margin-top:20px;" title="@Employee.empName"><span class="bar" style="background-color:@Bgcolor;" data-number="@Employee.hoursWorked">
                </span><span class="number">@Employee.hoursWorked</span></li>
               
            }
        </ul>
    </div>
    }

    else if (Model.EmployeeData.Count > 0)
    {
    <strong>Work hours</strong>
    <span>L-Leave OEM-Out Entry</span>
    <div id="chart3" style="height: 250px; width: 100%">
    </div>            
    }
    else
    {
        string BG = "Red";
    <div class="chart-horiz clearfix" id="time">
        <ul class="chart">
            <li class="current" style="margin-top: 20px;" title="Time Entry Records not Found">
                <span class="bar" style="background-color: @BG; height:20px;" data-number="10"></span>
            </li>
        </ul>
    </div>
    }

    
    
    
   }