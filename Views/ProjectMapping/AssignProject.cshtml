@*View Name    :Assign Project Members
Purpose        :To Assign Project Members
Date Created   :20-02-2015
Created By     :Balaji.S*@
@model DSRCManagementSystem.Models.ProjectMapping
@{
    ViewBag.Title = "Assign Resoures To Project";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}
<html>
@*<body style="overflow: hidden">
</body>*@
<head>
    <title>Assign Projects</title>
    <link href="../../Content/Template/js/select2/select2-bootstrap.css" rel="stylesheet"
        type="text/css" />
    <link href="../../Content/Template/js/select2/select2.css" rel="stylesheet" type="text/css" />
    <script src="../../Scripts/jquery-1.7.1.js" type="text/javascript"></script>
    <script src="../../Scripts/jquery-1.7.1.min.js" type="text/javascript"></script>
    <script src="../../Content/Template/js/select2/select2.min.js" type="text/javascript"></script>
    <script src="../../Content/bootstrap/js/bootstrap.min.js" type="text/javascript"></script>
    <script src="../../Content/bootstrap/js/bootstrap.js" type="text/javascript"></script>
    <script src="../../Content/bootstrap/bootbox.min.js" type="text/javascript"></script>
    <script src="../../Content/Template/js/toastr.js" type="text/javascript"></script>

    <style>
        .dropdown-menu {
    background-color: white;
}
        </style>

    <script type="text/javascript">

        var opts = {
            "closeButton": true,
            "debug": false,
            "positionClass": "toast-top-right",
            "onclick": null,
            "showDuration": "300",
            "hideDuration": "1000",
            "timeOut": "2000",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        };

        $(document).ready(function () {
            //$("#EmployeeList").removeAttr('multiple');
            $('#AssignedList').click(function () {
                //if (!$('#AssignedList option:selected').val()){    return; }
                //document.getElementById("RemoveButton").disabled = false;
                if ($(this).val() == null) {
                    $("#RemoveButton").attr('disabled', true);
                } else {
                    $("#RemoveButton").attr('disabled', false);
                }
            });
        });
        function AssignMembers() {
           
            
            ClearPopUp();
            var values = [];
            for (var i = 0; i < $("#AssignedList")[0].options.length; i++) {
                values[i] = $("#AssignedList")[0].options[i].value;
            }
            var Obj = {
                UserId: values,
                ProjectId: $("#ProjectList").val()
            };
            //alert(Obj.ProjectId +" "+ Obj.UserId.length);
            if (parseInt($("#ProjectList").val()) == 0) 
            {
                var Message = 'Project not selected to finalize.';
                WarningPopUp(Message);
            }
            else if (parseInt($("#RoleList").val()) == 0 && parseInt($("#EmployeeList").val())!=0) 
            {
              
                var Message = 'Resource not selected to finalize.';
                WarningPopUp(Message);
            }
            else if (parseInt($("#RoleList").val()) != 0 && !parseInt($("#EmployeeList").val())) {
                
                var Message = 'Employee not selected to finalize.';
                WarningPopUp(Message);
            }
            else if ($("#AssignedList > option").length == 0) 
            {
                var Message = 'Employee not selected to finalize.';
                WarningPopUp(Message);
            } /*
            if (Obj.ProjectId == 0 || Obj.UserId.length == 0) {
                var Message = 'Members not selected to finalize.';
                WarningPopUp(Message);
            }*/
            else {
                $.ajax({
                    type: "POST",
                    url: "/ProjectMapping/AssignProject",
                    dataType: "json",
                    data: { Value: JSON.stringify(Obj) },
                    success: function (result) {
                        if (!result) {
                            bootbox.alert(result + "<br/>" + "Alreay Exist");
                            var Message = result + "<br/>" + "Alreay exist in this project.";
                            var Message = 'Details failed to save.';
                            WarningPopUp(Message);
                        }
                        else {
                            var Message = 'Details saved successful.';
                            PopUp(Message);
                        }
                    }
                });
            }
        }
        function listbox_remove(sourceID) {
            var src = document.getElementById(sourceID);
            if (src.options.selectedIndex !== -1) {
                for (var count = src.options.length - 1; count >= 0; count--) {
                    if (src.options[count].selected == true) {
                        try {
                            src.remove(count, null);

                            var values = [];
                            for (var i = 0; i < $("#AssignedList")[0].options.length; i++) {
                                values[i] = $("#AssignedList")[0].options[i].value;
                            }
                            var Obj = {
                                UserId: values,
                                ProjectId: $("#ProjectList").val()
                            };

                            $.ajax({
                                type: "POST",
                                url: "/ProjectMapping/AssignProject",
                                dataType: "json",
                                data: { Value: JSON.stringify(Obj) },
                                success: function (result) {
                                    if (!result) {
                                        bootbox.alert(result + "<br/>" + "Alreay Exist");
                                        var Message = result + "<br/>" + "Alreay exist in this project.";
                                        var Message = 'Failed to remove.';
                                        WarningPopUp(Message);
                                    }
                                    else {
                                        var Message = 'Removed successfully.';

                                        toastr.success(Message, opts);                                        
                                    }
                                }
                            });


                        } catch (error) {
                            src.remove(count);
                        }
                    }
                }
            } else {
                ClearPopUp();
                WarningPopUp("Employee not selected to remove");
            }

        }
        function AddItem() {
            ClearPopUp();
            var ids = [];
            var i = [];

            $('#AssignedList option').each(function (index) {
                //                i[index] = $("#AssignedList")[0].options[index].value.split('+');
                //                ids[index] = i[index][0];
                //i[index] = $("#AssignedList")[0].options[index].value;
                ids[index] = $("#AssignedList")[0].options[index].value;               
            });

            var PId = $("#ProjectList option:selected").val();
            var rId = $("#RoleList option:selected").val();
            var uid = $("#EmployeeList option:selected").val() + '+' + rId;
            var userName = $("#EmployeeList option:selected").text();

          
            
            if (uid != 0 && $.inArray(uid, ids) == -1 && rId != 0 && PId != 0) {
                var opt = document.createElement("option");
                document.getElementById("AssignedList").options.add(opt);
                var roleText = $("#RoleList option:selected").text();
                var Text = userName + ' (' + roleText + ')';
                opt.text = Text;
                opt.value = uid + '+' + rId;
            }
            else {
                if ($.inArray(uid, ids) != -1) {
                    var Message = userName + ' ' + 'Already Selected';
                    WarningPopUp(Message);
                }
                else if (PId == 0) {
                    var Message = 'Project name not selected.';
                    WarningPopUp(Message);
                }
                else if (rId == 0) {
                    var Message = 'Resources not selected.';
                    WarningPopUp(Message);
                }
                //else {
                //var Message = 'Member name not Selected.';
                //WarningPopUp(Message);
                //}
            }
        }
        function WarningPopUp(message) {
            var opts = {
                "closeButton": true,
                "debug": false,
                "positionClass": "toast-top-right",
                "onclick": null,
                "showDuration": "300",
                "hideDuration": "1000",
                "timeOut": "2000",
                "extendedTimeOut": "1000",
                "showEasing": "swing",
                "hideEasing": "linear",
                "showMethod": "fadeIn",
                "hideMethod": "fadeOut"
            };
            toastr.warning(message, null, opts);
        }
        function PopUp(message) {
            var opts = {
                "closeButton": true,
                "debug": false,
                "positionClass": "toast-top-right",
                "onclick": null,
                "showDuration": "300",
                "hideDuration": "1000",
                "timeOut": "2000",
                "extendedTimeOut": "1000",
                "showEasing": "swing",
                "hideEasing": "linear",
                "showMethod": "fadeIn",
                "hideMethod": "fadeOut"
            };
            toastr.success(message, opts);
            setTimeout(function () {
                window.location.reload(true);
            }, 1500);
        }
        function ClearPopUp() {
            var toastrOptions = {
                "closeButton": true,
                "debug": false,
                "positionClass": "toast-top-right",
                "toastClass": "White",
                "onclick": null,
                "showDuration": "300",
                "hideDuration": "1000",
                "timeOut": "2000",
                "extendedTimeOut": "1000",
                "showEasing": "swing",
                "hideEasing": "linear",
                "showMethod": "fadeIn",
                "hideMethod": "fadeOut"
            }
            toastr.clear("", toastrOptions);
        }
        function changeProject() {
            $("#EmployeeList").val("0");
            $("#s2id_EmployeeList>a>span.select2-chosen").text($("#EmployeeList option:selected").text());
            $("#AssignedList").empty();
            var value = $("#ProjectList option:selected").val();
            if (value != 0) {
                $.ajax({
                    type: "GET",
                    url: "/ProjectMapping/GetAssignedProject",
                    data: { PId: value },
                    contentType: "application/json;charset=utf-8",
                    dataType: "json",
                    success: function (result) {
                        $.each(result, function (i, value) {
                            var opt = document.createElement("option");
                            document.getElementById("AssignedList").options.add(opt);
                            opt.text = value.Text;
                            opt.value = value.Value;
                        });
                    }
                });
            } else {
                document.getElementById("RemoveButton").disabled = true;
            }
        }
        function changeRole() {
            $("#EmployeeList").val("0");
            $("#s2id_EmployeeList>a>span.select2-chosen").text($("#EmployeeList option:selected").text());
        } 
    </script>
</head>
<body>
    @{
        int SNO = 1;
        bool IsRerportingPerson = bool.Parse(Session["IsRerportingPerson"].ToString());
    }
 @*   <ol class="breadcrumb bc-3">
        <li><a><i class="entypo-home"></i>Home</a> </li>
        <li>
        <a href="@Url.Action("ViewProjects","Projects")">
            <i class="fa-home1"></i>Project Management
        </a>
    </li>
        <li class="active"><strong>Assign Resources To Project</strong> </li>
    </ol>*@

    <p>
        <a href="@Url.Action("ViewProjects","Projects")"style="color:black ">
            Project Management
        </a>
          &#160;<img src="~/Images/righ-arrow.png" />&#160;
        <b>Assign Resources To Project</b>
    </p>
    <br />
    <div class="row">
        <div class="col-md-12" style="text-align: right">
            @Html.Label("*", new { @style = "color:#FF0000" }) Required field(s)
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="panel panel-default panel-shadow" data-collapsed="0">
                <div class="panel-heading">
                    <div class="panel-title" color="White">
                        Assign Resources To Project
                    </div>
                </div>
                <br />
                <div class="panel-body">
                    <div class="form-group">
                        <div class="row">
                            <div class="col-md-2">
                                @Html.Label("Select Project")
                                @Html.Label("  *", new { @style = "color:red;font-weight:;" })
                            </div>
                            <div class="col-md-4">
                                @Html.DropDownListFor(x => x.ProjectName, Model.ProjectList, new { @class = "select2", @id = "ProjectList", @Onchange = "changeProject()" })
                            </div>
                            <div class="col-md-2">
                                @Html.Label("Select Resource Type")
                                @Html.Label("  *", new { @style = "color:red;font-weight:bold;" })
                            </div>
                            <div class="col-md-4">
                                @Html.DropDownListFor(x => x.MemberTypeID, Model.RoleList, new { @class = "select2", @id = "RoleList", @Onchange = "changeRole()" })
                            </div>
                        </div>
                    </div>
                    <br />
                    <br />
                    @*<br />*@
                    <div class="form-group">
                        <div class="row">
                            <div class="col-md-2">
                                @Html.Label("All Employees")
                                @Html.Label("  *", new { @style = "color:red;font-weight:;" })
                            </div>
                            <div class="col-md-4">
                                @Html.DropDownListFor(x => x.EmployeeName, Model.EmployeeList, "---Select---", new { @class = "select2", @id = "EmployeeList", @onchange = "AddItem()" })
                                @*<div style="margin-top: 20px;">
                                    <button type="button" class="btn btn-info form-control" style="width: 100px" id="AssignButton"
                                        onclick="AddItem()">
                                        Assign</button>
                                </div>*@
                            </div>
                            <div class="col-md-2">
                                @Html.Label("Selected Employees")
                                @Html.Label("  *", new { @style = "color:red;font-weight:;" })
                            </div>
                            <div class="col-md-4">
                                @Html.ListBoxFor(x => x.EmployeeName, new List<SelectListItem>(), new { @class = "form-control", @name = "AssignedList", @id = "AssignedList", @style = "Height:200Px", @ondblclick = "listbox_remove('AssignedList')" })
                                @*<div style="margin-top: 20px;">
                                    <button type="button" class="btn btn-info form-control" style="width: 100px" id="RemoveButton"
                                        onclick="listbox_remove('AssignedList')">
                                        Remove</button>
                                </div>*@
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="row">
                            <div class="col-md-2">
                            </div>
                            <div class="col-md-4" style="text-align: center">
                                @*<button type="button" class="btn btn-info form-control" style="width: 100px" id="AssignButton"
                                    onclick="AddItem()">
                                    Assign</button>*@
                            </div>
                            <div class="col-md-2">
                            </div>
                            @if (IsRerportingPerson)
                            {
                                <div class="col-md-4" style="text-align: center">
                                    <button type="button" class="btn btn-danger form-control" style="width: 100px" id="RemoveButton"
                                        disabled onclick="listbox_remove('AssignedList')">
                                        Remove</button>
                                    <button type="button" class="btn btn-info form-control" style="width: 100px;" id="FinalizeButton"
                                        onclick="AssignMembers()">
                                        Finalize</button>
                                </div>
                            }
                        </div>
                    </div>
                    <div class="clear">
                    </div>
                    @*<br />*@
                    <div class="form-group">
                        <div class="row">
                            @* <div class="col-md-2">
                            </div>
                            <div class="col-md-4">
                            </div>
                            <div class="col-md-12" style="text-align: center">
                                <button type="button" class="btn btn-info form-control" style="width: 100px;" id="FinalizeButton"
                                    onclick="AssignMembers()">
                                    Finalize</button>
                            </div>
                            <div class="col-md-4">
                            </div>*@
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>
</html>
