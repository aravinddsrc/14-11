@model IEnumerable<DSRCManagementSystem.Models.PaymentStructure>
@{
    ViewBag.Title = "Project Payment";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}
@{
    int SNO = 1;
}
<html>
    <head>
    <meta name="viewport" content="width=device-width" />
    <title>Payment Structure</title>      
    <script src="../../Content/Template/js/jquery.dataTables.min.js" type="text/javascript"></script>
    <script src="../../Content/Template/js/dataTables.bootstrap.js" type="text/javascript"></script>
         <style>
        .dropdown-menu {
    background-color: white;
}
        </style>
 
    </head>
<body class="page-body">
@*     <ol class="breadcrumb bc-3">
        
        <li><a href="@Url.Action("Income","Income")">Accounts Management</a></li>
        <li class="active"><strong>Payment Structure</strong> </li>
    </ol>*@
    <p>
        <a href="@Url.Action("Income","Income")"style="color:black ">
            Accounts Management
        </a>
          &#160;<img src="~/Images/righ-arrow.png" />&#160;
        <b>Payment Structure</b>
    </p>
<br />
    <br />
    <div class="row">
    <div class="col-md-12">
        <div class="panel panel-default panel-shadow" data-collapsed="0">
            <!-- panel head -->
            <div class="panel-heading">
                <div class="panel-title" color="White">
                     Payment Structure</div>
            </div>
            <br />
                    <div class="btn-group" style="float: right">
                        <button type="button" class="btn btn-blue" style="font-weight: bold" onclick='CreatePayment()'/>
                           Create Payment Structure
                    </div>
                   <div class="clear">
                    </div>
                    <br />
                    <table class="table table-bordered datatable" id="tbltask">
                         <thead>
                            <tr>
                                <th style="text-align: center;">
                                    S.No
                                </th>
                                <th style="text-align: center;">
                                    Customer Name
                                </th>
                                 <th style="text-align: center;">
                                    Payment Type
                                </th>
                                <th style="text-align: center;">
                                    Amount
                                </th>
                                <th style="text-align: center;">
                                    Edit
                                </th> 
                                 <th style="text-align: center;">
                                     Assign
                                </th>  
                                  <th style="text-align: center;">
                                      Delete
                                </th>  
                                                                     
                            </tr>
                        </thead>
                       @foreach (var item in Model)
                        { 
                         <tr>
                                <td style="text-align: center;">
                                    @(SNO++)
                                    @Html.HiddenFor(modelitem => item.PaymentID)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelitem => item.CustomerName)
                                </td>
                              <td style="text-align: center;">
                                     @Html.DisplayFor(modelitem => item.PaymentType)
                                </td>
                                <td style="text-align: right;">
                                     @Html.DisplayFor(modelitem => item.Amount)
                                </td>
                               <td style="text-align: center">
                                    <a class="btn btn-info" data-toggle="tooltip" title="Edit" onclick="location.href='@Url.Action("EditProjectPayment", "PaymentStructure", new { PaymentID =item.PaymentID })'">
                                      <i class="entypo-pencil"></i></a>
                                </td>

                               <td style="text-align: center">
                                  <a class="btn btn-info" data-toggle="tooltip" title="Assign" onclick='Assign(@item.PaymentID)'>
                                    <i class="entypo-users"></i></a>
                               </td>

                              <td style="text-align: center">
                                  <a class="btn btn-danger" data-toggle="tooltip" title="Delete" onclick='DeletePayment(@item.PaymentID)'>
                                      <i class="entypo-cancel"></i></a>
                               </td>

                             
                            </tr>
                        }
                   
                    </table>
            </div>
        </div>
      </div>
          <br />
          <br />
  <div class="modal fade in" id="portlet-config"  role="dialog" aria-labelledby="myModalLabel"
        aria-hidden="true">
      
        <div class="modal-dialog">
            <div class="tools">
                <div id="PartialSection">
                </div>
            </div>
        </div>
      
    </div>
     <script type="text/javascript">
         jQuery(document).ready(function ($) {
             localStorage.clear();

             //$("#tbltask").dataTable({
             //    "sPaginationType": "bootstrap",
             //    "aLengthMenu": [[10, 15, 20, 25, -1], [10, 15, 20, 25, "All"]],
             //    "columnDefs": [{ bSortable: false, 'aTargets': [5] }, { bSortable: false, 'aTargets': [3] }, { bSortable: false, 'aTargets': [4] }]

             //});
             var table = $("#tbltask").dataTable({
                 "lengthMenu": [[10, 25, 50, -1], [10, 25, 50, "All"]],

                 "sPaginationType": "bootstrap",
                 "aaSorting": [],
                 "columnDefs": [{ bSortable: false, 'aTargets': [5] }, { bSortable: false, 'aTargets': [4] }, { bSortable: false, 'aTargets': [6]}],

                 stateSave: true,
                 stateSaveCallback: function (settings, data) {
                     localStorage.setItem('DataTables_' + settings.sInstance, JSON.stringify(data))
                 },
                 stateLoadCallback: function (settings) {
                     return JSON.parse(localStorage.getItem('DataTables_' + settings.sInstance))
                 }
             });
             $(".dataTables_wrapper select").select2({
                 minimumResultsForSearch: -1
             });
             $('thead>tr>th').css('text-align', 'center');
         });
         var opts = {
             "closeButton": true,
             "debug": false,
             "positionClass": "toast-top-right",
             "onclick": null,
             "showDuration": "300",
             "hideDuration": "1000",
             "timeOut": "2000",
             "extendedTimeOut": "1000",
             "showEasing": "swing",
             "hideEasing": "linear",
             "showMethod": "fadeIn",
             "hideMethod": "fadeOut"
         };

         function CreatePayment() {
             window.location.href = '@Url.Action("CreateProjectPayment", "PaymentStructure")';
         }
         function DeletePayment(PaymentID) {
             bootbox.confirm("Are you sure want to delete ?", function (result) {
                 if (result) {
                     $.ajax({
                         url: "../../PaymentStructure/DeleteProjectPayment/",
                         type: 'POST', cache: false,
                         data: { PaymentID: PaymentID },
                         success: function (result) {
                             if (result == "success") {
                                 toastr.success("Project Payment  Deleted Successfully", opts);
                                 setTimeout(function () { location.reload(); }, 1000);
                             }
                             else {
                                 toastr.warning("Project Payment Deletion Failed", opts);
                                 setTimeout(function () { location.reload(); }, 1000);
                             }

                         }
                     });
                 }
             });
         }
         function AssignUser(PaymentID) {
             $.ajax({
                 url: "../../PaymentStructure/AssignPaymentGroup/",
                 type: 'GET', cache: false,
                 data: { PaymentID: PaymentID },
                 success: function (result) {
                     $('#PartialSection').html(result);
                     $('#portlet-config').appendTo("body").modal({ backdrop: 'static', keyboard: false });
                 }
             });
         }


         function Assign(PaymentID)
         {
             $.ajax({
                 url: "../../PaymentStructure/Assign/",
                 type: 'GET', cache: false,
                 data :{PaymentID:PaymentID},
                 success: function (result) {
                     $('#PartialSection').html(result);
                     $('#portlet-config').appendTo("body").modal({ backdrop: 'static', keyboard: false });
                 }
             });


         }
        </script>    
</body>
</html>
