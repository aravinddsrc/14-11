@model DSRCManagementSystem.Models.Template
@{
    ViewBag.Title = "Edit Column";
    Layout = null;
}
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>AddNewSubGroup</title>
    <script src="../../Content/bootstrap/js/bootstrap.min.js" type="text/javascript"></script>
    <script src="../../Content/bootstrap/bootbox.min.js" type="text/javascript"></script>
    <script src="../../Content/Template/js/toastr.js" type="text/javascript"></script>
    <style>
       .dropdown-menu {
    background-color: white;
}        
 </style> 

</head>
<body>
    <div class="modal-content">
        <div class="modal-header"  style="background-color:#f0f0f1;">
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                ×</button>
            <h4 class="modal-title">
                Edit Column</h4>
        </div>
        <div class="modal-body">
         <div class="row">
                 
                    <div class="col-md-12">
                        <div class="form-group">
                         @Html.Label("* ", new { @style = "margin-left:370px; color:red;font-weight:;" })
                         @Html.Label(" Required Field(s)")
                        </div>
                    </div>
                </div>
            <div class="row">
                <div class="col-md-12">
                    <div class="form-group">
                        @Html.LabelFor(x => x.columnName, new { @class = "control-label" })
                        &nbsp;&nbsp;
                            @Html.Label("  *", new { @style = "color:red;font-weight:bold;" })
                        @Html.TextBoxFor(x => x.columnName, new { @id = "columnName", @name = "columnName", @class = "form-control", @placeholder = "Enter subGroupName", @autocomplete = "off" })

                        @Html.HiddenFor(o => o.ColumnId, new { @id = "ColumnId" })
                    </div>
                </div>
            </div>
<div >
@Html.Label("   Column Name Required*", new { @class = "control-label", @id = "ColumnValidation", @style = "color:red;display:none;font-weight:bold;" })
</div>


            <div class="row">
                <div class="col-md-12">
                    <div class="form-group">
                        @Html.LabelFor(x => x.groupName,(string)ViewBag.Lbl_depgroup , new { @class = "control-label" })
                       @Html.DropDownList("GroupID", ViewBag.GroupID as SelectList, new { @id = "GroupID", @name = "GroupID", @class = "form-control" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <div class="form-group">
                        @Html.LabelFor(x => x.columnTypeID, new { @class = "control-label" })
                        @Html.DropDownList("columnTypeID", ViewBag.columnTypeID as SelectList, new { @id = "columnTypeID", @name = "columnTypeID", @class = "form-control" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <div class="form-group">
                        <div class="checkbox">
                            <label class="checkbox-inline">
                                @Html.CheckBoxFor(a => a.IsActive.Value, new { @id = "IsActive", @name = "IsActived" })IsActive</label>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-default" data-dismiss="modal">
                Cancel</button>
            <button type="button" id="btnAdd" class="btn btn-info" onclick="Save()">
                Save</button>
        </div>
    </div>
    <script type="text/javascript">

        var opts = {
            "closeButton": true,
            "debug": false,
            "positionClass": "toast-top-right",
            "toastClass": "White",
            "onclick": null,
            "showDuration": "300",
            "hideDuration": "1000",
            "timeOut": "3000",
            "extendedTimeOut": "1000",
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        }

        function Save() {

            if ($("#columnName").val() != "") {
                var values =
            {
                "ColumnName": $("#columnName").val(),
                "GroupName": $("#GroupID").val(),
                "ColumnTypeID": $("#columnTypeID").val(),
                "IsActive": $("#IsActive").is(":checked"),
                "ColumnId": $("#ColumnId").val()
            }
                $.ajax({
                    url: "../../Template/EditColumn/",
                    type: 'POST',
                    cache: false,
                    data: values,
                    success: function (result) {
                        $("#" + $("#ColumnId").val()).remove();

                        $("#content").append("<tr id=" + $("#ColumnId").val() + "><td>" + $("#columnName").val() + "</td><td>" + $("#GroupID").find('option:selected').text() + "</td><td>" + $("#columnTypeID").find('option:selected').text() + "</td><td><a class='btn btn-info btn-sm btn-block btn-icon icon-left' onclick='EditColumn(" + $("#ColumnId").val() + ")'><i class='entypo-pencil'></i>Edit</a></td><td><a class='btn btn-danger btn-sm btn-block btn-icon icon-left' onclick=onclick='EditColumn(" + $("#ColumnId").val() + ")'><i class='entypo-pencil'></i>Delete</a></td></tr>");
                        $('#PartialSection').html("");
                        $("#portlet-config").modal("show");
                        $("#portlet-config").modal('toggle');
                        setTimeout(function () {
                            var toastrOptions = {
                                "closeButton": true,
                                "debug": false,
                                "positionClass": "toast-top-right",
                                "toastClass": "White",
                                "onclick": null,
                                "showDuration": "300",
                                "hideDuration": "1000",
                                "timeOut": "5000",
                                "extendedTimeOut": "1000",
                                "showEasing": "swing",
                                "hideEasing": "linear",
                                "showMethod": "fadeIn",
                                "hideMethod": "fadeOut"
                            }
                            toastr.clear("", toastrOptions);
                            toastr.success("Column has been updated sucessfully ", opts);
                        }, 0);
                        // bootbox.alert("Column  Successfully  Edited");
                    }
                })
            }
            else {
                $("#ColumnValidation").toggle(true);
            }
        }
    </script>
</body>
</html>
