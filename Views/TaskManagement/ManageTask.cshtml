@model IEnumerable<DSRCManagementSystem.Models.TaskManagement>
@{
    ViewBag.Title = "ManageTask";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}
@{
    int SNO = 1;
}
@section AddToHead{
    <script src="../../Content/Template/js/jquery.dataTables.min.js" type="text/javascript"></script>
    <script src="../../Content/Template/js/dataTables.bootstrap.js" type="text/javascript"></script>
    <style>
       .dropdown-menu {
    background-color: white;
}        
 </style> 

    }
<div class="page-body">
@*     <ol class="breadcrumb bc-3">
        <li><a href="@Url.Action("ManageTask","TaskManagement")">Task Management</a></li>
        <li class="active"><strong>Manage Task</strong> </li>
    </ol>*@
    <p>
        <a href="@Url.Action("ManageTask","TaskManagement")"style="color:black ">
            Task Management
        </a>
          &#160;<img src="~/Images/righ-arrow.png" />&#160;
        <b>Manage Task</b>
    </p>
    <br />
    <div class="row">
    <div class="col-md-12">
        <div class="panel panel-default panel-shadow" data-collapsed="0">
            <!-- panel head -->
            <div class="panel-heading">
                <div class="panel-title" color="White">
                    Manage Task</div>
            </div>
            <br />
                    <div class="btn-group" style="float: right">
                        <button type="button" class="btn btn-blue" style="font-weight: bold" onclick='CreateTask()'/>
                           Create New Task
                    </div>
                   <div class="clear">
                    </div>
                    <br />
                    <table class="table table-bordered datatable" id="tbltask">
                         <thead>
                            <tr>
                                <th style="text-align: center;">
                                    S.No
                                </th>
                                <th style="text-align: center;">
                                    Task Description
                                </th>
                                <th style="text-align: center;">
                                    Assigned To
                                </th>
                                 <th style="text-align: center;">
                                    Assigned Date
                                </th>
                                 <th style="text-align: center;">
                                  Recurring Name
                                </th>
                                <th>
                                    Edit
                                </th>
                                <th>
                                    Delete
                                </th>                             
                            </tr>
                        </thead>
                       @foreach (var item in Model)
                       {
                        <tr class="@Html.Raw((item.SelectedUserStatusid==2) ? "danger" : "")">
                            <td style="text-align: center;">
                                @(SNO++)
                                @Html.HiddenFor(modelitem => item.TaskID)
                            </td>
                            <td>
                                @Html.DisplayFor(modelitem => item.TaskDescription)
                            </td>
                            <td>
                                @Html.DisplayFor(modelitem => item.AssignedUser)
                            </td>
                            <td style="text-align: center;">
                               
                                @item.AssignedDate.ToString("ddd, MMM d, yyyy")
                                
                            </td>
                            <td>
                                @Html.DisplayFor(modelitem => item.RecurringName)
                            </td>

                            <td style="text-align:center">
                                <a href="#" data-toggle="tooltip" title="Edit" class="btn btn-info" onclick="EditTask('@item.TaskID')">
                                    <i class="entypo-pencil"></i>
                                </a>
                            </td>
                            <td style="text-align: center">
                                @*<a class="btn btn-danger" onclick='DeleteTask(@item.TaskID)'>
                                    <i class="entypo-cancel"></i>Delete</a>*@
                                <a class="btn btn-danger" data-toggle="tooltip" title="Delete" onclick='DeleteTask(@item.TaskID)'>
                                    <i class="entypo-cancel"></i>
                                </a>
                            </td>
                        </tr>
                       }
                   
                    </table>
            </div>
        </div>
      </div>
          <br />
          <br />
      

  <div class="modal fade in" id="portlet-config"  role="dialog" aria-labelledby="myModalLabel"
        aria-hidden="true">
      
        <div class="modal-dialog">
            <div class="tools">
                <div id="PartialSection">
                </div>
            </div>
        </div>
      
    </div>
 
     <script type="text/javascript">
         jQuery(document).ready(function ($) {
             localStorage.clear();

            @* var table = $("#tbltask").dataTable({
                 "lengthMenu": [[10, 25, 50, -1], [10, 25, 50, "All"]],
                 //"lengthMenu": [[5, 15, 20, -1], [5, 15, 20, "All"]],
                 "sPaginationType": "bootstrap",
                 "aaSorting": [],
                 "columnDefs": [@*{ bSortable: false, 'aTargets': [4] },*@ @* { bSortable: false, 'aTargets': [5] }, { bSortable: false, 'aTargets': [6] }],

                 stateSave: true,
                 stateSaveCallback: function (settings, data) {
                     localStorage.setItem('DataTables_' + settings.sInstance, JSON.stringify(data))
                 },
                 stateLoadCallback: function (settings) {
                     return JSON.parse(localStorage.getItem('DataTables_' + settings.sInstance))
                 }
             });*@

            
            $("#tbltask").dataTable({
                 "sPaginationType": "bootstrap",
                 "aLengthMenu": [[10, 15, 20, 25, -1], [10, 15, 20, 25, "All"]],
                 //"alengthMenu": [[5, 15, 20, 25 -1], [5, 15, 20,25, "All"]],
                 "columnDefs": [@*{ bSortable: false, 'aTargets': [4] },*@ { bSortable: false, 'aTargets': [5] }, { bSortable: false, 'aTargets': [6] }],
                stateSave: true,
             stateSaveCallback: function (settings, data) {
                 localStorage.setItem('DataTables_' + settings.sInstance, JSON.stringify(data))
             },
             stateLoadCallback: function (settings) {
                 return JSON.parse(localStorage.getItem('DataTables_' + settings.sInstance))
             }

             });
             $(".dataTables_wrapper select").select2({
                 minimumResultsForSearch: -1
             });
             $('thead>tr>th').css('text-align', 'center');
         });
         var opts = {
             "closeButton": true,
             "debug": false,
             "positionClass": "toast-top-right",
             "onclick": null,
             "showDuration": "300",
             "hideDuration": "1000",
             "timeOut": "2000",
             "extendedTimeOut": "1000",
             "showEasing": "swing",
             "hideEasing": "linear",
             "showMethod": "fadeIn",
             "hideMethod": "fadeOut"
         };

         function EditTask(TaskID) {
            

             $.ajax({
                 url: "../../TaskManagement/EditTask/",
                 type: 'GET', cache: false,
                 data:{TaskID:TaskID},
                 success: function (result) {
                     $('#PartialSection').html(result);
                     $('#portlet-config').appendTo("body").modal({ backdrop: 'static', keyboard: false });

                 }

             });

         }

         function CreateTask() {
             
             
                $.ajax({
                    url: "../../TaskManagement/CreateTask/",
                    type: 'GET', cache: false,
                    success: function (result) {
                        $('#PartialSection').html(result);
                        $('#portlet-config').appendTo("body").modal({ backdrop: 'static', keyboard: false });

                    }

                });
         }
         function DeleteTask(TaskID) {
             bootbox.confirm("Are you sure want to delete ?", function (result) {
                 if (result) {
                     $.ajax({
                         url: "../../TaskManagement/DeleteTask/",
                             type: 'POST', cache: false,
                             data:{TaskID: TaskID},
                             success: function (result) {
                                 if (result == "success") {
                                     toastr.success("Task Deleted Successfully", opts);
                                     setTimeout(function () { location.reload(); }, 1000);
                                 }
                                 else {
                                     toastr.warning("Task Deletion Failed", opts);
                                     setTimeout(function () { location.reload(); }, 1000);
                                 }

                             }
                     });
                 }
             });
         }
        </script>    
</div>
