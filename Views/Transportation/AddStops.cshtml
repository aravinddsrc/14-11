@model DSRCManagementSystem.Models.ManageStops

@{
    ViewBag.Title = "AddRoute";
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <meta name="referrer" content="no-referrer">
    <title>Add Stops</title>
    <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=false"></script>

    <link href="../../Content/Template/js/jquery-ui/css/no-theme/jquery-ui-1.10.3.custom.min.css"
          rel="stylesheet" type="text/css" />
    <link href="../../Content/Template/css/font-icons/entypo/css/entypo.css" rel="stylesheet"
          type="text/css" />
    <link href="../../Content/Template/css/font-icons/entypo/css/animation.css" rel="stylesheet"
          type="text/css" />
    <link rel="stylesheet" href="http://fonts.googleapis.com/css?family=Noto+Sans:400,700,400italic"
          id="style-resource-4" />
    <link href="../../Content/Template/css/custom.css" rel="stylesheet" type="text/css" />
    <script src="../../Content/Template/js/select2/select2.min.js" type="text/javascript"></script>
    <script src="../../Content/JS/ToasterAlert.js" type="text/javascript"></script>
    <script src="http://jsfiddle.net/laelitenetwork/puJ6G/" type="text/javascript"></script>
    <script src="../../Completion/multiselect.min.js" type="text/javascript"></script>
    <script src="../../Completion/3.34.js" type="text/javascript"></script>
    <script src="../../Completion/multiselect.js" type="text/javascript"></script>

    <script type="text/javascript">

        $(function () {
            $(".modal-body select").select2({
                minimumResultsForSearch: -1
            });

            $("#drp_VehicleNumber").select2();
            $("#drp_Location").select2();
            $("#drp_driverName").select2();
        });

        $(document).ready(function () {
            // hack Google Maps to bypass API v3 key (needed since 22 June 2016 http://googlegeodevelopers.blogspot.com.es/2016/06/building-for-scale-updates-to-google.html)
            var target = document.head;
            var observer = new MutationObserver(function (mutations) {
                for (var i = 0; mutations[i]; ++i) { // notify when script to hack is added in HTML head
                    if (mutations[i].addedNodes[0].nodeName == "SCRIPT" && mutations[i].addedNodes[0].src.match(/\/AuthenticationService.Authenticate?/g)) {
                        var str = mutations[i].addedNodes[0].src.match(/[?&]callback=.*[&$]/g);
                        if (str) {
                            if (str[0][str[0].length - 1] == '&') {
                                str = str[0].substring(10, str[0].length - 1);
                            } else {
                                str = str[0].substring(10);
                            }
                            var split = str.split(".");
                            var object = split[0];
                            var method = split[1];
                            window[object][method] = null; // remove censorship message function _xdc_._jmzdv6 (AJAX callback name "_jmzdv6" differs depending on URL)
                            //window[object] = {}; // when we removed the complete object _xdc_, Google Maps tiles did not load when we moved the map with the mouse (no problem with OpenStreetMap)
                        }
                        observer.disconnect();
                    }
                }
            });

            var config = { attributes: true, childList: true, characterData: true }
            observer.observe(target, config);

        });

        function initialize(locationName) {

            var geocoder;
            var map;
            geocoder = new google.maps.Geocoder();
            var latlng = new google.maps.LatLng(13.0827, 80.2707);
            var myOptions = {
                zoom: 8,
                center: latlng,
                mapTypeControl: true,
                mapTypeControlOptions: { style: google.maps.MapTypeControlStyle.DROPDOWN_MENU },
                navigationControl: true,
                mapTypeId: google.maps.MapTypeId.ROADMAP
            };
            map = new google.maps.Map(document.getElementById("map"), myOptions);
            if (geocoder) {
                geocoder.geocode({ 'address': locationName }, function (results, status) {
                    if (status == google.maps.GeocoderStatus.OK) {
                        if (status != google.maps.GeocoderStatus.ZERO_RESULTS) {
                            map.setCenter(results[0].geometry.location);

                            var infowindow = new google.maps.InfoWindow(
                                {
                                    content: '<b>' + locationName + '</b>',
                                    size: new google.maps.Size(150, 50),
                                });

                            var marker = new google.maps.Marker({
                                position: results[0].geometry.location,
                                map: map,
                                title: locationName
                            });
                            google.maps.event.addListener(marker, 'click', function () {
                                infowindow.open(map, marker);
                            });

                        } else {
                            alert("No results found");
                        }
                    } else {
                        alert("Geocode was not successful for the following reason: " + status);
                    }
                });
            }
        }

        window.onload = function () {
            initialize("chennai");
        };

        function ModelSave() {

            var data = {
                "stopId": $("#drp_Location").val(),
                "vehichleId": $("#drp_VehicleNumber").val(),
                "Waitingtime": $("#txt_WaitingTime").val(),
                "driverId": $("#drp_driverName").val(),
                "Fees": $("#txt_Fees").val(),
                "TripCount": $("#txt_tripCount").val()
            }

            $.ajax({
                url: '@Url.Action("AddRoute", "Transportation")' + "?stopId=" + $("#drp_Location").val(),// + "&&vehichleId=" + $("#drp_VehicleNumber").val(),//"../../Transportation/AddRoute/",
                type: 'GET',
                cache: false,
                data: data,
                traditional: true,
                global: false,
                success: function (result) {
                    for (var i = 0; i < result.length; i++) {
                        $("#stopsList").append('<option value="' + result[i].Value + '">' + result[i].Text + '</option>');
                    }

                    $('#portlet-config').modal('hide');
                }
            });

        }

        function cancelStop() {
            var url = '@Url.Action("AddRoute", "Transportation")';
            window.location.href = url;
        }

        function locationchange() {
            initialize($("#drp_Location")[0].selectedOptions[0].text);
        }

    </script>

</head>

<body>
    <div class="modal-content">

        <div class="modal-header" style="background-color: #f0f0f1;">
            <button type="button" class="close" onclick="javascript:window.location.reload()" data-dismiss="modal" aria-hidden="true">
                ×
            </button>
            <h4 class="modal-title">Add Stops </h4>
        </div>

        <div class="modal-body">
            <div class="row" style="height: 500px; width:100%;">
                @*<div class="row">*@
                <div class="col-md-6">
                    <div class="row">
                        <div class="col-md-6" style="width: 200px; padding-top: 7px; ">
                            @Html.Label("Location(Stop Name)", new { @class = "control-label" })
                            @Html.Hidden("StopId", @Model.StopId, new { @id = "hdnstopId" })
                            @Html.DropDownListFor(x => x.StopId, (IEnumerable<SelectListItem>)ViewData["Stops"] ?? new List<SelectListItem>(), new { @id = "drp_Location", @class = "form-control", @autocomplete = "off", @onchange = "locationchange()", @style = "Width:450Px;Height:50px" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6" style="width: 200px; padding-top: 7px;">
                            @Html.Label("Vehicle No", new { @class = "control-label" })
                            @Html.Hidden("vehicleId", @Model.vehicleId, new { @id = "hdnstopId" })
                            @Html.DropDownListFor(x => x.vehicleId, (IEnumerable<SelectListItem>)ViewData["VehicleList"], new { @id = "drp_VehicleNumber", @class = "form-control", @autocomplete = "off", @style = "Width:450Px;Height:50px", @disabled = "disabled" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6" style="width: 200px; padding-top: 7px;">
                            @Html.Label("Waiting Time", new { @class = "control-label" })
                            @Html.TextBoxFor(x => x.Waitingtime, new { @id = "txt_WaitingTime", @class = "form-control", @style = "Width:450Px;Height:50px" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6" style="width: 200px; padding-top: 7px;">
                            @Html.Label("Driver Name", new { @class = "control-label" })
                            @Html.Hidden("driverId", @Model.driverId, new { @id = "hdndriverId" })
                            @Html.DropDownListFor(x => x.DriverName, (IEnumerable<SelectListItem>)ViewData["DriverName"], new { @id = "drp_driverName", @class = "form-control", @autocomplete = "off", @style = "Width:450Px;Height:50px", @disabled = "disabled" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6" style="width: 200px; padding-top: 7px;">
                            @Html.Label("Fees", new { @class = "control-label" })
                            @Html.TextBoxFor(x => x.Fees, new { @id = "txt_Fees", @class = "form-control", @style = "Width:450Px;Height:50px" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6" style="width: 200px; padding-top: 7px;">
                            @Html.Label("Trip No/Count", new { @class = "control-label" })
                            @Html.TextBoxFor(x => x.TripCount, new { @id = "txt_tripCount", @class = "form-control", @style = "Width:450Px;Height:50px" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div id="map" style="height: 600px; width: 700px">
                        </div>
                    </div>
                </div>
            </div>
            @*</div>*@
        </div>

        <div class="modal-footer">
            <button type="button" class="btn btn-default" data-dismiss="modal">
                Cancel
            </button>
            <button type="button" id="btnAdd" class="btn btn-info" onclick="ModelSave()">
                Save
            </button>
        </div>

    </div>
</body>
</html>
