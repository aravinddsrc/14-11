@model IEnumerable<DSRCManagementSystem.Models.Skills>
@{
    ViewBag.Title = "Skills Specification";
      
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
    
}
@section AddToHead
{
    <script src="../../Content/Template/js/raphael-min.js" type="text/javascript"></script>
    <script src="../../Content/Template/js/morris.min.js" type="text/javascript"></script>
    <link href="../../Content/Template/js/select2/select2-bootstrap.css" rel="stylesheet"
        type="text/css" />
    <link href="../../Content/Template/js/select2/select2.css" rel="stylesheet" type="text/css" />
    <link href="../../Content/Template/css/font-icons/font-awesome/css/font-awesome.min.css"
        rel="stylesheet" type="text/css" />
    <link href="../../Content/Plugins/bootstrap-datetimepicker/css/bootstrap-datepicker.css"
        rel="stylesheet" type="text/css" />
    <script src="../../Content/Plugins/bootstrap-datetimepicker/js/bootstrap-datepicker.js"
        type="text/javascript"></script>
    <script src="../../Content/bootstrap/js/bootstrap.min.js" type="text/javascript"></script>
    <script src="../../Content/bootstrap/bootbox.min.js" type="text/javascript"></script>
    <script src="../../Content/bootstrap/js/bootstrap.min.js" type="text/javascript"></script>

    <style>
          #tblSubmittedLeaveRequest td:nth-child(1)
        {
            text-align: center;
        }
        
        #tblSubmittedLeaveRequest td:nth-child(6)
        {
            text-align: center;
        }
        #tblProjects2 td:nth-child(3)
        {
            word-wrap: break-word ; word-break: break-all;
        }
        
        .colorClass1
        {
            background-color: rgb(245,105,84);
            border-color: rgb(245,105,84);
        }
        .colorClass2
        {
            background-color: rgb(0,141,76);
            border-color: rgb(12,158,55);
        }
        .colorClass3
        {
            background-color: rgb(0,115,183);
            border-color: rgb(0,84,168);
        }
         

       .dropdown-menu {
    background-color: white;
}        
 </style> 

}
@{
    int SNOss = 1;
    
}

@{
    int SNO = 1;
    
}

@{
    int SNOs = 1;
    
}

@*<ol class="breadcrumb bc-3">
        <li><a href="@Url.Action("Skills","Technology")">Skills</a></li>
    <li class="active"><strong>Skills Specification</strong> </li>
</ol>*@
     <p>
        <a href="@Url.Action("Skills","Skills")"style="color:black ">
            Skills
        </a>
          &#160;<img src="~/Images/righ-arrow.png" />&#160;
        <b>Skills Specification</b>
    </p>
<div class="row">


    @{        
        <ul class="nav nav-tabs bordered" role="tablist">
            <!-- available classes "bordered", "right-aligned" -->
            <li class="active"><a href="#AddTechnology" data-toggle="tab" role="tab">Technology</a></li>
            <li ><a href="#AddSkills" data-toggle="tab" role="tab">Specification</a></li>
            <li><a href="#AddMap" data-toggle="tab" role="tab">Technology-Specification Mapping</a></li>
        </ul>
        
    }
    <br />
    <div class="panel-body">

        <div class="clear">
        </div>

        <br />

        <div class="tab-content">
            <div class="tab-pane active" id="AddTechnology">
                <div class="row" style="height: 500px;">

                    <div class="col-md-12">
                        <div class="panel panel-default panel-shadow" data-collapsed="0">
                            <!-- panel head -->
                            <div class="panel-heading">
                                <div class="panel-title" color="White">
                                    Technology
                                </div>
                            </div>
                            <!-- panel body -->
                            <div class="panel-body" style="overflow: auto">

                                <div class="form-group">

                                    <div class="row">

                                        <div class="col-md-3" style="float: right" id="btnAdd2">
                                            <button type="button" class="btn btn-blue" style="float: right; font-weight: bold;" onclick='AddTechnology()'>
                                            Add Technolgy
                                        </div>
                                    </div>
                                    <br />                               

                                    <table class="table table-bordered datatable" id="tech">
                                        <thead>
                                            <tr>
                                                <th style="text-align: center;">S.No
                                                </th>
                                                <th style="text-align: center;">@Html.DisplayName("Skills Name")
                                                </th>
                                                <th style="text-align: center;">@Html.DisplayName("Edit")
                                                </th>
                                                <th style="text-align: center;">@Html.DisplayName("Delete")
                                               </th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var item in Model)
                                                {
                                                     if (item.techId != null && item.techname!= null)
                                            {
                                                <tr>
                                                    <td style="text-align: center;">
                                                        @(SNOss++)
                                                    </td>
                                                    <td>
                                                        @Html.HiddenFor(modelitem => item.techId)
                                                        @Html.DisplayFor(modelitem => item.techname)
                                                    </td>

                                                    <td style="text-align: center;">
                                                         <a href="#" data-toggle="tooltip" title="Edit">
                                                <button type="button" class="btn btn-info"   onclick='EditTechnology(@item.techId,"@item.techname")'>
                                                    <i class="entypo-pencil"></i>
                                                </button>
                                            </a>

                                                    </td>
                                                    <td style="text-align: center;">
                                                        
                                                        <a href="#" data-toggle="tooltip" title="Delete">
                                                <button type="button" class="btn btn-red"  onclick='Deletetech(@item.techId)'>
                                                    <i class="entypo-cancel"></i>
                                                </button>
                                            </a>
                                                    </td>

                                                </tr>
                                            }
                                            }
                                            
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                     </div>
                </div>
            </div>


            <div class="tab-pane" id="AddSkills">
                <div class="row" style="height: 500px;">

                    <div class="col-md-12">
                        <div class="panel panel-default panel-shadow" data-collapsed="0">
                            <!-- panel head -->
                            <div class="panel-heading">
                                <div class="panel-title" color="White">
                                    Skills Specification
                                </div>
                            </div>
                            <!-- panel body -->
                            <div class="panel-body" style="overflow: auto">

                                <div class="form-group">

                                    <div class="row">

                                        <div class="col-md-3" style="float: right" id="btnAdd2">
                                            <button type="button" class="btn btn-blue" style="float: right; font-weight: bold;" onclick='AddSkills()'>
                                            Add Skill
                                        </div>
                                    </div>
                                    <br />                                   

                                    <table class="table table-bordered datatable" id="skill">
                                        <thead>
                                            <tr>
                                                <th style="text-align: center;">S.No
                                                </th>
                                                <th style="text-align: center;">@Html.DisplayName("Skills")
                                                </th>


                                                <th style="text-align: center;">@Html.DisplayName("Edit")

                                                </th>
                                                <th style="text-align: center;">@Html.DisplayName("Delete")

                                                </th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var item in Model)
                                                {
                                                     if (item.Id != null && item.Technology != null)
                                            {
                                                <tr>
                                                    <td style="text-align: center;">
                                                        @(SNO++)
                                                    </td>
                                                    <td>
                                                        @Html.HiddenFor(modelitem => item.Id)
                                                        @Html.DisplayFor(modelitem => item.Technology)
                                                    </td>
                                                    <td style="text-align: center;">
                                                         <a href="#" data-toggle="tooltip" title="Edit">
                                                <button type="button" class="btn btn-info"   onclick='Edit(@item.Id,"@item.Technology")'>
                                                    <i class="entypo-pencil"></i>
                                                </button>
                                            </a>
                                                    </td>
                                                    <td style="text-align: center;">                                                        
                                                        <a href="#" data-toggle="tooltip" title="Delete">
                                                <button type="button" class="btn btn-red"  onclick='Delete(@item.Id)'>
                                                    <i class="entypo-cancel"></i>
                                                </button>
                                            </a>
                                                    </td>
                                                </tr>
                                            }
                                            }                                            
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>


            <div class="tab-pane" id="AddMap">
                <div class="row">
                    <div class="col-md-12">
                        <div class="panel-heading">
                        </div>

                        <div class="row" style="height: 500px;">

                            <div class="col-md-12">
                                <div class="panel panel-default panel-shadow" data-collapsed="0">
                                    <!-- panel head -->
                                    <div class="panel-heading">
                                        <div class="panel-title" color="White">
                                            Skill Mapping
                                        </div>
                                    </div>
                                    <!-- panel body -->
                                    <div class="panel-body" style="overflow: auto">
                                        <div class="form-group">
                                            <div class="row">
                                                <div class="col-md-3" style="float: right" id="btnAdds">
                                                    <button type="button" class="btn btn-blue" style="float: right; font-weight: bold;" onclick='AddMap()'>
                                                    Skill Mapping
                                                </div>
                                            </div>
                                            <br />

                                            <table class="table table-bordered datatable" id="map">
                                                <thead>
                                                    <tr>
                                                        <th style="text-align: center;">S.No
                                                        </th>

                                                        <th style="text-align: center;">@Html.DisplayName("Technology ")
                                                        </th>
                                                        <th style="text-align: center;">@Html.DisplayName("Specialization")
                                                        </th>

                                                        <th style="text-align: center;">@Html.DisplayName("Edit")

                                                        </th>
                                                        <th style="text-align: center;">@Html.DisplayName("Delete")

                                                        </th>

                                                    </tr>
                                                </thead>

                                                @foreach (var item in Model)
                                                {
                                                    if (item.LevelId != null && item.SkillId != null && item.SpecId != null && item.SkillName != null && item.SpecName != null)
                                                    {
                                                    <tr>
                                                        <td style="text-align: center;">
                                                            @(SNOs++)
                                                        </td>

                                                        <td>
                                                            @Html.HiddenFor(modelitem => item.LevelId, new { @id = "LevelId" })
                                                            @Html.HiddenFor(modelitem => item.SkillId, new { @id = "SkillId" })
                                                            @Html.HiddenFor(modelitem => item.SpecId, new { @id = "SpecId" })
                                                            @Html.DisplayFor(modelitem => item.SkillName)
                                                        </td>
                                                        <td>
                                                            @Html.DisplayFor(modelitem => item.SpecName)
                                                        </td>
                                                        <td style="text-align: center">
                                                           

                                                                  <a href="#" data-toggle="tooltip" title="Edit">
                                                <button type="button" class="btn btn-info"  onclick='EditMap(@item.LevelId,@item.SkillId,@item.SpecId)'>
                                                    <i class="entypo-pencil"></i>
                                                </button>
                                            </a>                                    
                                                        </td>
                                                        <td style="text-align: center">
                                                           
                                                             <a href="#" data-toggle="tooltip" title="Delete">
                                                <button type="button" class="btn btn-red"  onclick='DeleteMap(@item.LevelId)'>
                                                    <i class="entypo-cancel"></i>
                                                </button>
                                            </a>
                                                        </td>

                                                    </tr>
                                                    }
                                                }
                                            </table>




                                        </div>

                                    </div>

                                </div>
                            </div>
                        </div>


                    </div>
                </div>
            </div>




        </div>
    </div>
</div>




<div class="modal fade in" id="portlet-config" tabindex="-1" role="dialog" aria-labelledby="myModalLabel"
    aria-hidden="true">
    <div class="modal-dialog">
        <div class="tools">
            <div id="PartialSection">
            </div>
        </div>
    </div>
</div>





@section scripts
{
    <script src="../../Content/Template/js/jquery.dataTables.min.js" type="text/javascript"></script>
    <script src="../../Content/Template/js/dataTables.bootstrap.js" type="text/javascript"></script>
    <script src="../../Content/Template/js/select2/select2.min.js" type="text/javascript"></script>
    <script src="../../Content/JS/ToasterAlert.js" type="text/javascript"></script>
    <script type="text/javascript">



        //$(document).ready(function () {
        //    $('a[data-toggle="tab"]').on('shown.bs.tab', function (e) {

        //        localStorage.setItem('lastTab', $(this).attr('href'));
        //    });
        //    var lastTab = localStorage.getItem('lastTab');
        //    if (lastTab) {
        //        $('[href="' + lastTab + '"]').tab('show');
        //    }
        //    if (window.onunload) {
        //        window.onunload = function () {
        //            localStorage.clear();
        //        }
        //    }
        //});

        ////$(document).ready(function () {


        ////    $(".datetimepicker").datepicker({
        ////        format: 'yyyy-mm-dd',
        ////        //startDate: '1d',
        ////        todayHighlight: true,
        ////        autoclose: true,
        ////        //endDate: '1d'

        ////    });
        ////});

        jQuery(document).ready(function ($) {

            var columnDefs;

            $("#tech").dataTable({
                "sPaginationType": "bootstrap",
                "aLengthMenu": [[10, 15, 20, 25, -1], [10, 15, 20, 25, "All"]],
                "aaSorting": [],
                "columnDefs": [{ bSortable: false, 'aTargets': [2] }]

            });
            $(".dataTables_wrapper select").select2({
                minimumResultsForSearch: -1
            });
            $('thead>tr>th').css('text-align', 'center');


            $("#skill").dataTable({
                "sPaginationType": "bootstrap",
                "aLengthMenu": [[10, 15, 20, 25, -1], [10, 15, 20, 25, "All"]],
                "aaSorting": [],
                "columnDefs": [{ bSortable: false, 'aTargets': [2] }, { bSortable: false, 'aTargets': [3] }]

            });
            $(".dataTables_wrapper select").select2({
                minimumResultsForSearch: -1
            });
            $('thead>tr>th').css('text-align', 'center');



            $("#map").dataTable({
                "sPaginationType": "bootstrap",
                "aLengthMenu": [[10, 15, 20, 25, -1], [10, 15, 20, 25, "All"]],
                "aaSorting": [],
                "columnDefs": [{ bSortable: false, 'aTargets': [3] }, { bSortable: false, 'aTargets': [4] }]

            });
            $(".dataTables_wrapper select").select2({
                minimumResultsForSearch: -1
            });
            $('thead>tr>th').css('text-align', 'center');


        });




        function AddSkills() {

            $.ajax({
                url: "../../SkillsSpecification/AddSkills/",
                type: 'GET', cache: false,
                success: function (result) {
                    $('#PartialSection').html(result);
                    $('#portlet-config').appendTo("body").modal({ backdrop: 'static', keyboard: false });
                }
            });
        }
        function AddMap() {

            $.ajax({
                url: "../../SkillsSpecification/AddMap/",
                type: 'GET', cache: false,
                success: function (result) {
                    $('#PartialSection').html(result);
                    $('#portlet-config').appendTo("body").modal({ backdrop: 'static', keyboard: false });
                }
            });
        }

        function Edit(uId, pName, pName1, pName2) {


            $.ajax({
                url: "../../SkillsSpecification/EditSkills/",
                type: 'GET',
                cache: false,
                data: { Id: uId, Technology: pName, ActivityLevel: pName1, Comment: pName2 },
                success: function (result) {
                    if (result == "DeleteWarning") {

                        $("#portlet-config").modal('hide');
                        toastr.warning("Cannot Edit Unassigned Role", opts);
                        setTimeout(function () { location.reload(); }, 1000);
                    }
                    else {
                        $('#PartialSection').html(result);
                        $('#portlet-config').appendTo("body").modal({ backdrop: 'static', keyboard: false });
                    }
                }
            });
        }

        function Delete(uid) {
         
            bootbox.confirm("Are you sure want to delete ?", function (conform) {
                if (conform) {
                    $.ajax({
                        url: "../../SkillsSpecification/Delete/",
                        type: 'POST', cache: false,
                        data: { IDs: uid },
                        success: function (result) {
                            if (result === "Success") {
                                toastr.success(" Skill deleted successfully!");
                                setTimeout(function () { location.reload(); }, 1000);
                            }
                            if (result === "Warning") {
                                toastr.warning(" This Skill cannot be deleted as there are one or more employees associated with it !");
                                setTimeout(function () { location.reload(); }, 1000);
                            }


                        }
                    });
                }
            });
        }






        function DeleteMap(uid) {
            var opts =
           {
               "closeButton": true,
               "debug": false,
               "positionClass": "toast-top-right",
               "toastClass": "White",
               "onclick": null,
               "showDuration": "3000",
               "hideDuration": "1000",
               "timeOut": "2000",
               "extendedTimeOut": "1000",
               "showEasing": "swing",
               "hideEasing": "linear",
               "showMethod": "fadeIn",
               "hideMethod": "fadeOut"
           }
            bootbox.confirm("Are you sure want to delete ?", function (result) {
                if (result) {
                    $.ajax({
                        url: "../../SkillsSpecification/DeleteMap/",
                        type: 'GET',
                        cache: false,
                        data: { ID: uid },
                        success:
                           function (result) {
                               if (result == "Success") {

                                   $('#portlet-config').appendTo("body").modal({ backdrop: 'static', keyboard: false });
                                   toastr.success("Mapping Deleted successfully!", opts);
                                   setTimeout(function () { location.reload(); }, 1000);
                               }
                               else if (result == "Warning") {
                                   $('#portlet-config').appendTo("body").modal({ backdrop: 'static', keyboard: false });
                                   toastr.warning("This Mapping cannot be deleted as there are one or more employees associated with it !", opts);
                                   setTimeout(function () {
                                       window.location = window.location;

                                   }, 1500);
                               }
                               else if (result == "Warning1") {
                                   $('#portlet-config').appendTo("body").modal({ backdrop: 'static', keyboard: false });
                                   toastr.warning("Cannot Delete Unassiged Role ", opts);
                                   setTimeout(function () {
                                       window.location = window.location;
                                   }, 1500);
                               }
                           }
                    });
                }
            });
        }



      @*  function Save() {

            var values =
                        {

                            "ActivityDate": $("#ActivityDate").val(),

                        }
            var opts =
                   {
                       "closeButton": true,
                       "debug": false,
                       "positionClass": "toast-top-right",
                       "toastClass": "White",
                       "onclick": null,
                       "showDuration": "300",
                       "hideDuration": "1000",
                       "timeOut": "2000",
                       "extendedTimeOut": "1000",
                       "showEasing": "swing",
                       "hideEasing": "linear",
                       "showMethod": "fadeIn",
                       "hideMethod": "fadeOut"
                   }

            $.ajax({

                url: "../../ManageObservation/observation/",
                type: 'GET',
                cache: false,
                data: values,
                traditional: true,
                global: false,
                success: function (result) {
                    if (result == "Success") {
                        toastr.success(" Added successfully", opts);
                        setTimeout(function () { location.reload(); }, 1000);

                    }
                    if (result == "Warning") {
                        $("#portlet-config").modal("hide");
                        toastr.warning(" Date Already Exist ", opts);

                    }

                }
            });
        }

        function change() {



            $('#GroupName').hide();

            var DepartmentName = $('#DepartmentName').find("option:selected").prop("value");

            var url2 = '@Url.Action("GetAvailEmployees")';

            $.get(url2, { DepartmentName: DepartmentName }, function (data) {

                var items = [];
                items.push("");
                items.push("<option value=0>--Select--</option>");

                $.each(data, function () {
                    items.push("<option value=" + this.Value + ">" + this.Text + "</option>");

                });
                $("#GroupName").html(items.join(' '));
                $("#GroupName").select2();
            });
        }


        $(document).ready(function () {

            fnUserchange();
            $("#DepartmentName").change(function () { fnUserchange() });
        });

        function fnUserchange() {

            var selectedId = $('#DepartmentName').val();
            //var date = $('#Date').val();
            if (selectedId == 0) {

                $('#Group').hide();
            }
            else {
                $('#Group').show();
            }
        }*@

        function EditMap(pName2, pName1, pName) {


            $.ajax({
                url: "../../SkillsSpecification/EditMap/",
                type: 'GET',
                cache: false,
                data: { LevelId: pName2, SkillId: pName1, SpecId: pName },
                success: function (result) {
                    if (result == "DeleteWarning") {

                        $("#portlet-config").modal('hide');
                        toastr.warning("Cannot Edit Unassigned Role", opts);
                        setTimeout(function () { location.reload(); }, 1000);
                    }
                    else {
                        $('#PartialSection').html(result);
                        $('#portlet-config').appendTo("body").modal({ backdrop: 'static', keyboard: false });
                    }
                }
            });
        }




        //Add technology
        function AddTechnology() {

            $.ajax({
                url: "../../SkillsSpecification/AddTechnology/",
                type: 'GET', cache: false,
                success: function (result) {
                    $('#PartialSection').html(result);
                    $('#portlet-config').appendTo("body").modal({ backdrop: 'static', keyboard: false });
                }
            });
        }

        function EditTechnology(uId, uname) {


            $.ajax({
                url: "../../SkillsSpecification/EditTechnology/",
                type: 'GET',
                cache: false,
                data: { techId: uId, techname: uname },
                success: function (result) {
                    if (result == "DeleteWarning") {

                        $("#portlet-config").modal('hide');
                        toastr.warning("Cannot Edit Unassigned Role", opts);
                        setTimeout(function () { location.reload(); }, 1000);
                    }
                    else {
                        $('#PartialSection').html(result);
                        $('#portlet-config').appendTo("body").modal({ backdrop: 'static', keyboard: false });
                    }
                }
            });
        }

        function Deletetech(uid) {

            bootbox.confirm("Are you sure want to delete ?", function (conform) {
                if (conform) {
                    $.ajax({
                        url: "../../SkillsSpecification/DeleteTechnology/",
                        type: 'POST', cache: false,
                        data: { Id:uid },
                        success: function (result) {
                            if (result === "Success") {
                                toastr.success(" Skill deleted successfully!");
                                setTimeout(function () { location.reload(); }, 1000);
                            }
                            if (result === "Warning") {
                                toastr.warning(" This Skill cannot be deleted as there are one or more employees associated with it !");
                                setTimeout(function () { location.reload(); }, 1000);
                            }


                        }
                    });
                }
            });
        }

    </script>
}
