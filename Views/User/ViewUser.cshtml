@model DSRCManagementSystem.Models.UserModel
@{
    Layout = null;
}
<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>NewUser</title>
    <link href="../../Content/Template/css/bootstrap.css" rel="stylesheet" type="text/css" />
    <link href="../../Content/Template/js/jquery-ui/css/no-theme/jquery-ui-1.10.3.custom.min.css"
        rel="stylesheet" type="text/css" />
    <link href="../../Content/Template/css/font-icons/entypo/css/entypo.css" rel="stylesheet"
        type="text/css" />
    <link href="../../Content/Template/css/font-icons/entypo/css/animation.css" rel="stylesheet"
        type="text/css" />
    <link rel="stylesheet" href="http://fonts.googleapis.com/css?family=Noto+Sans:400,700,400italic"
        id="style-resource-4" />
    @*<link href="../../Content/Template/css/neon.css" rel="stylesheet" type="text/css" />*@
    <link href="../../Content/Template/css/custom.css" rel="stylesheet" type="text/css" />
    <script src="../../Content/Plugins/bootstrap-datetimepicker/js/bootstrap-datepicker.js"
        type="text/javascript"></script>
    <link href="../../Content/Plugins/bootstrap-datetimepicker/css/bootstrap-datepicker.css"
        rel="stylesheet" type="text/css" />

    <style>
       .dropdown-menu {
    background-color: white;
          }  
        </style>
</head>
<body>
    <div class="modal-content">
        <div class="modal-header" style="background-color: #f0f0f1;">
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                ×</button>
            <h4 class="modal-title">
               View User</h4>
        </div>
        <div class="modal-body">
            @using (Html.BeginForm("UserDetails", "User", FormMethod.Post, new { @id = "edituser" }))
            {
                <div class="row">
                    <div class="col-md-12" style="text-align: right">
                        @Html.Label("*", new { @style = "color:#FF0000" }) Required field(s) @*     @Html.Hidden("IsNew", Model.EmpID)*@
                    </div>
                </div>
                if (Model.EmpID != null)
                {
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(x => x.EmpID, new { @class = "control-label" })
                            <b>@Html.Label("*", new { @style = "color:#FF0000" })</b>
                            @Html.TextBoxFor(x => x.EmpID, new { @id = "EmpID", @name = "EmpID", @class = "form-control", @placeholder = Resources.Resource.DN_ProfileModel_EmpID, @autocomplete = "off", onkeypress = "return IsNumeric(event);", ondrop = "return false;", onpaste = "return false;", @readonly = "readonly", @disabled = "disabled" })
                            @Html.HiddenFor(x => x.UserId)
                            <span id="emp_ID" style="color: Red;"></span>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(x => x.DepartmentName,(string)ViewBag.Lbl_department, new { @class = "control-label" })
                            <b>@Html.Label("*", new { @style = "color:#FF0000" })</b>
                            @Html.DropDownListFor(x => x.DepartmentId, ViewBag.DepartmentIdList as SelectList, new { @id = "DepartmentName", @name = "DepartmentName", @class = "form-control", @disabled = "disabled" })
                            @*@Html.DropDownList("DepartmentName", ViewBag.DepartmentIdList as SelectList, new { @id = "DepartmentName", @name = "DepartmentName", @class = "form-control" })*@
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(x => x.RoleName, new { @class = "control-label" })
                            <b>@Html.Label("*", new { @style = "color:#FF0000" })</b>
                            @Html.DropDownListFor(x => x.RoleID, ViewBag.RoleIdList as SelectList, new { @id = "RoleName", @name = "RoleName", @class = "form-control", @disabled = "disabled" })
                        </div>
                    </div>
                </div>
                }
                else
                {
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(x => x.EmpID, new { @class = "control-label" })
                            <b>@Html.Label("*", new { @style = "color:#FF0000" })</b>
                            @Html.TextBoxFor(x => x.EmpID, new { @id = "EmpID", @name = "EmpID", @class = "form-control", @placeholder = Resources.Resource.DN_ProfileModel_EmpID, @autocomplete = "off", onkeypress = "return IsNumeric(event);", ondrop = "return false;", onpaste = "return false;", @disabled = "disabled" })
                            @Html.HiddenFor(x => x.UserId)
                            <span id="emp_ID" style="color: Red;"></span>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(x => x.DepartmentName, new { @class = "control-label" })
                            <b>@Html.Label("*", new { @style = "color:#FF0000" })</b>
                            @Html.DropDownListFor(x => x.DepartmentId, ViewBag.DepartmentIdList as SelectList, new { @id = "DepartmentName", @name = "DepartmentName", @class = "form-control", @disabled = "disabled" })
                            @*@Html.DropDownList("DepartmentName", ViewBag.DepartmentIdList as SelectList, new { @id = "DepartmentName", @name = "DepartmentName", @class = "form-control" })*@
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(x => x.RoleName, new { @class = "control-label" })
                            <b>@Html.Label("*", new { @style = "color:#FF0000" })</b>
                            @Html.DropDownListFor(x => x.RoleID, ViewBag.RoleIdList as SelectList, new { @id = "RoleName", @name = "RoleName", @class = "form-control", @disabled = "disabled" })
                        </div>
                    </div>
                </div>
                }
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(x => x.FirstName, new { @class = "control-label" })
                            <b>@Html.Label("*", new { @style = "color:#FF0000" })</b>
                            @Html.TextBoxFor(x => x.FirstName, new { @id = "FirstName", @name = "FirstName", @class = "form-control", @placeholder = Resources.Resource.DN_ProfileModel_FirstName, @autocomplete = "off", @disabled = "disabled" })
                            @Html.ValidationMessageFor(x => x.FirstName, "", new { @style = "color:red;" })
                            <span id="FirstName_ID" style="color: Red;"></span>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(x => x.MiddleName, new { @class = "control-label" })
                            @Html.TextBoxFor(x => x.MiddleName, new { @id = "MiddleName", @name = "MiddleName", @class = "form-control", @placeholder = Resources.Resource.DN_ProfileModel_MiddleName, @autocomplete = "off", @disabled = "disabled" })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(x => x.LastName, new { @class = "control-label" })
                            @Html.TextBoxFor(x => x.LastName, new { @id = "LastName", @name = "LastName", @class = "form-control", @placeholder = Resources.Resource.DN_ProfileModel_LastName, @autocomplete = "off", @disabled = "disabled" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(x => x.DateOfBirth, new { @class = "control-label" })
                            @*<b>@Html.Label("*", new { @style = "color:#FF0000" })</b>*@
                            @Html.TextBoxFor(x => x.DateOfBirth, "{0:dd/MM/yyyy}", new { @id = "DateOfBirth", @name = "DateOfBirth", @class = "form-control datetimepicker", @placeholder = Resources.Resource.DN_ProfileModel_DateofBirth, @autocomplete = "off", @disabled = "disabled" })
                            @Html.ValidationMessageFor(x => x.DateOfBirth, "", new { @style = "font-weight:bold;color:red;" })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(x => x.DateOfJoin, new { @class = "control-label" })
                            <b>@Html.Label("*", new { @style = "color:#FF0000" })</b>
                            @Html.TextBoxFor(x => x.DateOfJoin, "{0:dd/MM/yyyy}", new { @id = "DateOfJoin", @name = "DateOfJoin", @class = "form-control datetimepicker", @placeholder = Resources.Resource.DN_ProfileModel_DateofJoin, @autocomplete = "off", @disabled = "disabled" })
                            @Html.ValidationMessageFor(x => x.DateOfJoin, "", new { @style = "font-weight:bold;color:red;" })
                            <span id="DateOfJoin_ID" style="color: Red;"></span>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.Label("Mobile Number", new { @class = "control-label" })
                            @*    <b>@Html.Label("*", new { @style = "color:#FF0000" })</b>*@
                            @Html.TextBoxFor(x => x.ContactNo, new { @id = "ContactNo", @name = "ContactNo", @class = "form-control", @placeholder = Resources.Resource.DN_ProfileModel_ContactNo, @autocomplete = "off", @disabled = "disabled" })
                            @Html.ValidationMessageFor(x => x.ContactNo, "", new { @style = "font-weight:bold;color:red;" })
                            <span id="contactNo_Error" style="color: Red;"></span>
                        </div>
                    </div>
                </div>
                
                if (Model.EmailAddress != null)
                {
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(x => x.EmailAddress, new { @class = "control-label" })
                            @Html.TextBoxFor(x => x.EmailAddress, new { @id = "EmailAddress", @name = "EmailAddress", @class = "form-control", @placeholder = Resources.Resource.DN_ProfileModel_EmailAddress, @autocomplete = "off", @readonly = "readonly", @disabled = "disabled" })
                            <span id="email" style="color: Red;"></span>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(x => x.GenderID, new { @class = "control-label" })
                            <b>@Html.Label("*", new { @style = "color:#FF0000" })</b>
                            @Html.DropDownListFor(x => x.GenderID, ViewBag.GenderList as SelectList, new { @id = "GenderName", @name = "GenderName", @class = "form-control", @disabled = "disabled" })
                        </div>
                    </div>
                </div>
                }
                else
                {
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(x => x.EmailAddress, new { @class = "control-label" })
                            <b>@Html.Label("*", new { @style = "color:#FF0000" })</b>
                            @Html.TextBoxFor(x => x.EmailAddress, new { @id = "EmailAddress", @name = "EmailAddress", @class = "form-control", @placeholder = Resources.Resource.DN_ProfileModel_EmailAddress, @autocomplete = "off", @disabled = "disabled" })
                            <span id="EmailAddress_ID" style="color: Red;"></span>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(x => x.GenderID, new { @class = "control-label" })
                            <b>@Html.Label("*", new { @style = "color:#FF0000" })</b>
                            @Html.DropDownListFor(x => x.GenderID, ViewBag.GenderList as SelectList, new { @id = "GenderName", @name = "GenderName", @class = "form-control", @disabled = "disabled" })
                        </div>
                    </div>
                </div>
                }
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group">
                            <div class="checkbox">
                                <label>
                                    @Html.CheckBoxFor(a => a.IsUnderProbation, new { @id = "IsUnderProbation", @name = "IsUnderProbation", @disabled = "disabled" })Under
                                    Probationary Period</label>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <div class="checkbox">
                                <label>
                                    @Html.CheckBoxFor(a => a.IsUnderNoticePeriod, new { @id = "IsUnderNoticePeriod", @name = "IsUnderNoticePeriod", @disabled = "disabled" })Under
                                    Notice Period</label>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <div class="checkbox">
                                <label>
                                    @Html.CheckBoxFor(a => a.IsActive, new { @id = "IsActive", @name = "IsActive", @disabled = "disabled" })Is
                                    Active</label>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="row" id='fornoticeperioid'>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(x => x.ResignedOn, new { @class = "control-label" })
                            <b>@Html.Label("*", new { @style = "color:#FF0000" })</b>
                            @Html.TextBoxFor(x => x.ResignedOn, "{0:dd/MM/yyyy}", new { @id = "Resignedon", @class = "form-control datetimepicker", @placeholder = "Resigned On", @autocomplete = "off", @disabled = "disabled" })
                            <span id="ResignedOn_Error" style="color: Red;"></span>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(x => x.LastworkingDate, new { @class = "control-label" })
                            @Html.TextBoxFor(x => x.LastworkingDate, "{0:dd/MM/yyyy}", new { @id = "lastworkingdate", @class = "form-control datetimepicker", @placeholder = "Last Working Date", @autocomplete = "off",@disabled = "disabled"  })
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">
                        Close</button>
                </div>
            }
        </div>
    </div>
    <script src="../../Content/Template/js/toastr.js" type="text/javascript"></script>
    <script type="text/javascript">

      

         /*   var dateVar = $("#lastworkingdate").val();
            var dateSplit = dateVar.split("-");
            var lastWorkingDate = new Date(dateSplit[2], dateSplit[1] - 1, dateSplit[0]);
            var currentDate = new Date();
            if (lastWorkingDate < new Date(currentDate.getYear(), currentDate.getMonth() - 1, currentDate.getDate())) {
                $("#IsActive").attr("checked", false);
                $("#IsActive").attr("disabled", true);
            }
        });*/

        $("#IsUnderProbation").on('change', function (event) {
            if ($("#IsUnderProbation").prop('checked')) {
                $("#IsUnderNoticePeriod").attr("checked", false);
                $("#IsUnderNoticePeriod").attr("disabled", true);
            } else {
                $("#IsUnderNoticePeriod").attr("disabled", false);

            }
        });


  /*      $("#OnBoarding").on('change', function (event) {
            if ($("#OnBoarding").prop('checked')) {
                $('input[type="text"], input[type="checkbox"], select').not("#DateOfJoin,#OnBoarding,#IsActive").prop("disabled", true);
            } else {
                $('input[type="text"], input[type="checkbox"], select').prop("disabled", false);
            }
        });*/

        if ($("#IsUnderNoticePeriod").prop('checked')) {
            $("#fornoticeperioid").show();
            $("#IsUnderProbation").attr("checked", false);
            $("#IsUnderProbation").attr("disabled", true);
        }
        else {
            $("#fornoticeperioid").hide();
        }

        $("#IsUnderNoticePeriod").change(function () {
            if ($("#IsUnderNoticePeriod").prop('checked')) {
                $("#fornoticeperioid").show();
                $("#IsUnderProbation").attr("checked", false);
                $("#IsUnderProbation").attr("disabled", true);

            } else {
                $("#fornoticeperioid").hide();
                $("#Resignedon").val("");
                $("#lastworkingdate").val("");
                $("#IsUnderProbation").attr("disabled", false);
                $("#ResignedOn_Error").html("");
            }

        });

        $(".datetimepicker").datepicker({
            format: 'dd-mm-yyyy',
            todayHighlight: true,

            autoclose: true

        });

        
    </script>
    <script type="text/javascript">

        $("#ContactNo").on('paste keypress', (function (e) {
            var key;
            if (e.which) {
                key = String.fromCharCode(e.which);
            } else {
                key = e.originalEvent.clipboardData.getData('Text');
            }
            var value = $(this).val() + key;
            if (!/^[0-9]{1,10}$/.test(value)) {
                e.preventDefault();
            }
        }));

        function Is10DigitNumber(value) {
            if (/^[0-9]{10}$/.test(value)) {
                return true;
            }
            return false;
        }
        $("#EmailAddress").on('paste keypress', (function (e) {
            var key;
            if (e.which) {
                key = String.fromCharCode(e.which);
            } else {
                key = e.originalEvent.clipboardData.getData('Text');
            }
            var value = $(this).val() + key;
            if (!/^([a-zA-Z]){1}(\w|\d)*?(@@)?(d)?(s)?(r)?(c)?(\.)?(c)?(o)?(\.)?(i)?(n)?$/.test(value)) {
                e.preventDefault();
            }
        }));
    </script>
</body>
</html>
