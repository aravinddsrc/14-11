@model DSRCManagementSystem.Models.AddTaskModel
@{
    Layout = null;
}


     <script src="../../Content/Plugins/bootstrap-datetimepicker/js/moment.js" type="text/javascript"></script>
    <link rel="stylesheet" href="http://fonts.googleapis.com/css?family=Noto+Sans:400,700,400italic"
        id="style-resource-4" />
    <script src="../../Content/Template/js/select2/select2.min.js" type="text/javascript"></script>
    <link href="../../Content/Template/css/neon.css" rel="stylesheet" type="text/css" />
    <link href="../../Content/Template/css/custom.css" rel="stylesheet" type="text/css" />
    <script src="../../Content/Plugins/bootstrap-datetimepicker/js/en-gb.js" type="text/javascript"></script>
    <script src="../../Content/Plugins/bootstrap-datetimepicker/js/moment.js" type="text/javascript"></script>
    <script src="../../Content/Plugins/bootstrap-datetimepicker/js/bootstrap-datepicker.js"
        type="text/javascript"></script>
    <link href="../../Content/Plugins/bootstrap-datetimepicker/css/bootstrap-datepicker.css"
        rel="stylesheet" type="text/css" />
    <link href="../../Content/Template/js/select2/select2-bootstrap.css" rel="stylesheet"
       type="text/css" />
   <link href="../../Content/Template/js/select2/select2.css" rel="stylesheet" type="text/css" />
   <script src="../../Content/Template/js/select2/select2.min.js" type="text/javascript"></script>
   <script src="../../Content/Template/js/select2/select2.min.js" type="text/javascript"></script>   
   <script src="../../Content/JS/ToasterAlert.js" type="text/javascript"></script>   

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Add Task</title>
</head>

    <style>
     .dropdown-menu {
    background-color:white;
}
        </style>

<body>
    <div class="modal-content">
    <div class="modal-header" style="background-color: #f0f0f1;">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true" onclick='cancelload()'>
                ×</button>
     <h4 class="modal-title">
                Add Task</h4>
     </div>
        @using (Html.BeginForm("AddTask", "AddTask", FormMethod.Post))
                {
         <div class="modal-body">
                
            <div class="row">
                <div class="col-md-6">
                </div>
                <div class="col-md-6" style="text-align: right">
                   @Html.Label("*", new { @style = "color:#FF0000" }) Required field(s)
                </div>
            </div>
            <br /> 
            <div class="row">
            <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(x => x.ProjectName, new { @class = "control-label" })
                        @Html.Label("  *", new { @style = "color:red;font-weight:bold;" })
                        @Html.DropDownList("ProjectName", ViewBag.ProjectList as SelectList, "--Select--", new { @class = "form-control", @id = "project", @onchange = "changeProject()" })
                       <span id="Project" style="color:Red"></span>
                    </div>
                </div>

                 <div class="col-md-6">
                  <div class="form-group">
                        @Html.LabelFor(x => x.PhaseName, new { @class = "control-label" })
                        @Html.Label("  *", new { @style = "color:red;font-weight:bold;" })
                        @Html.DropDownList("PhaseName", new List<SelectListItem>(),"--Select--", new { @class = "form-control", @id = "Phase" })
                       <span id="phase" style="color:Red"></span>
                </div>

             
                </div>
                </div>

                <div class="row">
               
                <div class="col-md-6">
                   <div class="form-group">
                         @Html.LabelFor(x => x.PhaseStatus, new { @class = "control-label" })
                        @Html.Label("  *", new { @style = "color:red;font-weight:bold;" })
                        @Html.TextBoxFor(x => x.PhaseStatus, new { @id = "status", @class = "form-control", @style = "height:42px;", @disabled = "disabled" })                            
                        <span id="phastatus" style="color:Red"></span>
                </div>
                </div>

               
                <div class="col-md-6">
                <div class="form-group">
                       @Html.LabelFor(x => x.Taskstatus, new { @class = "control-label" })
                        @Html.Label("  *", new { @style = "color:red;font-weight:bold;" })
                        @Html.DropDownList("TaskStatus", new SelectList(string.Empty, "Value", "Text"), "--Select--", new { @class = "form-control", @id = "tsktype" })
                       <span id="taskstatus" style="color:Red"></span>  
                </div>
                </div>
                </div>

                <div class="row">
                <div class="col-md-6">
                <div class="form-group">
                        @Html.LabelFor(x => x.TaskName, new { @class = "control-label" })
                        @Html.Label("  *", new { @style = "color:red;font-weight:bold;" })
                        @Html.TextBoxFor(x=>x.TaskName,new{@id = "task", @class = "form-control", @style = "height:42px", @maxlength = "50" })
                        <span id="tskname" style="color:Red"></span>



                      
                </div>
                </div>
                       
                <div class="col-md-6">
                <div class="form-group">
                       
                        @Html.LabelFor(x=>x.Efforts,new{ @class="control-label"})
                       @Html.Label("*", new { @style="color:red; font-weight:bold;"})
                       @Html.TextBoxFor(x=>x.Efforts, new { @id="efforts", @class="form-control",@style = "height:42px", @maxlength = 3})
                       <span id="eff" style="color:Red"></span>
                       
                       
                       
                     



                    
                </div>
                </div>
                </div>

                <div class="row">
                <div class="col-md-6">
                  <div class="form-group">

                    @Html.LabelFor(x=>x.StartDate,new{ @class="control-label"})
                       @Html.Label("*", new { @style="color:red; font-weight:bold;"})
                       @Html.TextBoxFor(x=>x.StartDate, new { @id="strtdate", @class="form-control datetimepicker",@style = "height:42px", @autocomplete="off"})
                       <span id="sdate"style="color:Red"></span>



              
                </div>
                </div>

                <div class="col-md-6">
                  <div class="form-group">
                      @Html.LabelFor(x=>x.EndDate,new{ @class="control-label"})
                       @Html.Label("*", new { @style="color:red; font-weight:bold;"})
                       @Html.TextBoxFor(x=>x.EndDate, new { @id="enddate", @class="form-control datetimepicker",@style = "height:42px", @autocomplete="off"})
                       <span id="edate" style="color:Red"></span> 
                
                </div>
                </div>
                </div>
                </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-default" data-dismiss="modal" onclick='close()'>
                Cancel</button>
            <button type="button" id="btnAdd" class="btn btn-info" onclick="Addtask()" >
                Save</button>
        </div>
        }
    </div>






       <div class="modal fade in" id="portlet-config1" tabindex="-1" role="dialog" aria-labelledby="myModalLabel"
        aria-hidden="true">
        <div class="modal-dialog">
            <div class="tools">
                <div id="PartialSection">
                    <div id="LoaderContent" style="height: 100%;">
                        <img src="../../Content/Template/images/finalloader.GIF" style="margin-left: 43%;
                            margin-top: 40%;" />
                    </div>
                </div>
            </div>
        </div>
    </div>             









        <script src="../../Content/Template/js/dataTables.bootstrap.js" type="text/javascript"></script>
        <script src="../../Content/JS/ToasterAlert.js" type="text/javascript"></script>
        <script src="../../Content/jquery-timepicker-master/jquery.timepicker.js" type="text/javascript"></script>
        <script src="../../Content/jquery-timepicker-master/jquery.timepicker.min.js" type="text/javascript"></script>


    


    <script type="text/javascript">

        var submitform = true;
    
        function cancelload() {
           
            setTimeout(function () { location.reload(); }, 1000);

        }
        function close() {

            setTimeout(function () { location.reload(); }, 1000);
        }
        var statusid = 0;

//        $(function () {
//            $(".modal-body select").select2({
//                minimumResultsForSearch: -1
//            });
//        });

        $(function () {

            $('select').select2();
        });
        


        $(".datetimepicker").datepicker({
            format: 'dd-mm-yyyy',
            //startDate: '+1d',
            daysOfWeekDisabled: [0, 6],
            autoclose: true
        });


        $("#Phase").change(function () {
            var p = $("#Phase").val();

            $.ajax({
                url: "../../AddTask/PhaseStatus",
                cache: false,
                data: { PhasId: p },
                success: function (result) {

                    $("#status").val(result.phase);
                    statusid = result.phaseid;

                }


            });
        });

       


//        $(document).ready(function () {
//          $("#efforts").keypress(function (e) {
//           if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
//                  
//                    $("#eff").html("Numerics Only").show();
//                    return false;
//                }
//            });
//        });
  $("#efforts").on('paste keypress', (function (e) {
                  var key;
                  if (e.which) {
                      key = String.fromCharCode(e.which);
                  } else {
                      key = e.originalEvent.clipboardData.getData('Text');
                  }
                  var value = $(this).val() + key;
                  if (!/^[0-9]{1,999}$/.test(value)) {
                      e.preventDefault();
                  }
              }));


        $(document).ready(function () {
            $('#task').keypress(function (e) {
                var regex = new RegExp("^[a-zA-Z\\0-9\\-\\.\\,\\'\\*\\(\)\[\\]\\:\\;\\s\\(/)\\$\\&\\*\\|\\(\)\\%\\_]+$");
                var str = String.fromCharCode(!e.charCode ? e.which : e.charCode);
                if (regex.test(str)) {

                    return true;
                }

                $("#tskname").html("Enter Valid Task Name").show();
                return false;
            });
        });


        $('#Phase').change(function (e) {



            var url2 = '@Url.Action("TaskType")';
            var statename = $('#Phase option:selected').val();

            $.get(url2, { phid: statename }, function (data) {
                var items = [];
                items.push("");
                
                $.each(data, function () {
                    items.push("<option value=" + this.Value + ">" + this.Text + "</option>");
                });
                $("#tsktype").html(items.join(' '));
                 $("#tsktype").select2();
            });


        });


        function changeProject() {

            var url2 = '@Url.Action("PhaseName")';
            var value = $("#project option:selected").val();
            $.get(url2, { pid: value }, function (data) {
                var items = [];
                items.push("");
                items.push("<option value=0>--Select--</option>");
                $.each(data, function () {
                    items.push("<option value=" + this.Value + ">" + this.Text + "</option>");
                });
                $("#Phase").html(items.join(' '));
                $("#Phase").select2();
            });
        }

        
        $("#strtdate").datepicker({
            format: 'dd-mm-yyyy',
            daysOfWeekDisabled: [0, 6],
            autoclose: true
        });

        $("#enddate").datepicker({
            format: 'dd-mm-yyyy',
            daysOfWeekDisabled: [0, 6],
            autoclose: true
        });

       
//       var errorsCount = 0;
//        $("#enddate").change(function () {

//            var startDate = $("#strtdate").val();
//            var splitedStartDate = startDate.split("-");
//            var endDate = $("#enddate").val();
//            var splitedEndDate = endDate.split("-");
//            var startDateTime = new Date(splitedStartDate[2], splitedStartDate[1] - 1, splitedStartDate[0]);
//            var endDateTime = new Date(splitedEndDate[2], splitedEndDate[1] - 1, splitedEndDate[0]);

//            if (errorsCount === 0) {
//                if (startDateTime > endDateTime) {

//                    errorsCount++;
//                   // $("#span_ID9").html("");
//                    $("#edate").html("End Date should be greater than the Start Date");

//                } else {

//                    errorsCount = 0;
//                }

//            }

//            if (errorsCount === 0) {

//                $("#edate").html("");
//            }
//        });


        $('#enddate').change(function () {
            var startDate = $("#strtdate").val();

            var splitedStartDate = startDate.split("-");
            var endDate = $("#enddate").val();

            var splitedEndDate = endDate.split("-");

            var startDateTime = new Date(splitedStartDate[2], splitedStartDate[1] - 1, splitedStartDate[0]);

            var endDateTime = new Date(splitedEndDate[2], splitedEndDate[1] - 1, splitedEndDate[0]);

            if (startDateTime > endDateTime) {

                $("#edate").html("End Date should be greater than the Start Date");
            }

            else {
                submitform = true;
                $("#edate").html('');
            }
        });



        function Addtask() {

            if (submitform == true)
        {

            if (document.getElementById('project').value == '' || document.getElementById('Phase').value == 0|| document.getElementById('Phase').value == ''  || document.getElementById('tsktype').value == 0||document.getElementById('tsktype').value == '' || document.getElementById('task').value == '' || document.getElementById('strtdate').value == '' || document.getElementById('enddate').value == '' || document.getElementById('efforts').value == '') {

                if (document.getElementById('project').value == '') {
                    document.getElementById("Project").innerHTML = "Select project name";
                }
                else {
                    document.getElementById("Project").innerHTML = "";
                }
                if (document.getElementById('Phase').value == ''||document.getElementById('Phase').value == 0) {
                    document.getElementById("phase").innerHTML = "Select phase name";
                }
                else {
                    document.getElementById("phase").innerHTML = "";

                }
//                if (document.getElementById('status').value == '') {
//                    document.getElementById("phastatus").innerHTML = "Select phase status";
//                }
//                else {
//                    document.getElementById("phastatus").innerHTML = "";
//                }
                if (document.getElementById('tsktype').value == ''||document.getElementById('tsktype').value == 0) {
                    document.getElementById("taskstatus").innerHTML = " Select task status ";
                }
                else {
                    document.getElementById("taskstatus").innerHTML = "";

                }
                if (document.getElementById('task').value == '') {
                    document.getElementById("tskname").innerHTML = " Enter task name ";
                }
                else {
                    document.getElementById("tskname").innerHTML = "";

                }


                if (document.getElementById('strtdate').value == '') {
                    document.getElementById("sdate").innerHTML = " Select start date ";
                }
                else {
                    document.getElementById("sdate").innerHTML = "";
                }
                if (document.getElementById('enddate').value == '') {
                    document.getElementById("edate").innerHTML = " Select end date";
                }
                else {
                    document.getElementById("edate").innerHTML = "";
                }
                if (document.getElementById('efforts').value == '') {
                    document.getElementById("eff").innerHTML = "Enter no of efforts ";
                }
                else {
                    document.getElementById("eff").innerHTML = "";
                }

            }

            else if ($("#efforts").val() > 999) {
                document.getElementById('eff').innerHTML = "Enter 3 digit integer only";
            }
            else if ($("#efforts").val() == 0 || $("#efforts").val() == 00 || $("#efforts").val() == 000) {

                document.getElementById('eff').innerHTML = "No of efforts should be greater than 0";
            }

             else {
                var startDate = $("#strtdate").val();

                var splitedStartDate = startDate.split("-");
                var endDate = $("#enddate").val();

                var splitedEndDate = endDate.split("-");

                var startDateTime = new Date(splitedStartDate[2], splitedStartDate[1] - 1, splitedStartDate[0]);

                var endDateTime = new Date(splitedEndDate[2], splitedEndDate[1] - 1, splitedEndDate[0]);

                if (startDateTime > endDateTime) {

                    $("#edate").html("End Date should be greater than the Start Date");
                }

          
                else {
                   
                    var values =
                           {

                               ProjectId: $("#project").find("option:selected").val(),
                               PhaseId:$("#Phase").find("option:selected").val(),
                               PhaseName: $("#Phase").find("option:selected").text(),
                               PhaseStatus: statusid,
                               TaskName: $("#task").val(),
                               Taskstatus: $("#tsktype").find("option:selected").val(),
                               StartDate: $("#strtdate").val(),
                               EndDate: $("#enddate").val(),
                               Efforts: $("#efforts").val()

                           }

                    var opts =
                       {
                           "closeButton": true,
                           "debug": false,
                           "positionClass": "toast-top-right",
                           "toastClass": "White",
                           "onclick": null,
                           "showDuration": "300",
                           "hideDuration": "1000",
                           "timeOut": "2000",
                           "extendedTimeOut": "1000",
                           "showEasing": "swing",
                           "hideEasing": "linear",
                           "showMethod": "fadeIn",
                           "hideMethod": "fadeOut"
                       }

                       $.ajax({

                           url: "../../AddTask/AddTask/",
                           type: 'POST',
                           cache: false,
                           data: values,
                           traditional: true,
                           global: false,
                           success: function (result) {

                               if (result === "AlreadyAssigned") {
                                   toastr.warning("Task already exist");
                               }

                               if (result === "exist") {
                                   toastr.warning("Task already exist");
                               }

                               if (result === "avail") {
                                   toastr.warning("Task already exist");
                               }

                               if (result.message == "timeexceed") {

                                   toastr.warning(" Task should be add within phase range from " + result.sdate + " to " + result.edate, opts);

                               }
                               if (result === "greater") {

                                   toastr.warning("No. of Efforts in Task should not exceeds No. of efforts in Phase");
                               }

                               if (result === "Success") {
                                   $('#portlet-config1').appendTo("body").modal({ backdrop: 'static', keyboard: false });
                                   toastr.success(" Task added successfully", opts);
                                   setTimeout(function () { location.reload(); }, 1000);

                               }

                           }

                       });


                }                     

            }
}
        }
         
       

    </script>
</body>
</html>


